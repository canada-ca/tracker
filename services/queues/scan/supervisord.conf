; used for IPC with supervisorctl
[unix_http_server]
file=/tmp/supervisor.sock   ; the path to the socket file

[supervisord]
logfile=/dev/stdout ; main log file; default $CWD/supervisord.log
logfile_maxbytes=0     ; max main logfile bytes b4 rotation; must be 0 for stdout
logfile_backups=0          ; # of main logfile backups; 0 means none, default 10
loglevel=info                ; log level; default info; others: debug,warn,trace
pidfile=/tmp/supervisord.pid ; supervisord pidfile; default supervisord.pid
nodaemon=true           ; need to run in foreground so container doesn't exit
silent=false                 ; no logs to stdout if true; default false

; The rpcinterface:supervisor section must remain in the config file for
; RPC (supervisorctl/web interface) to work.  Additional interfaces may be
; added by defining them in separate [rpcinterface:x] sections.

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

; The supervisorctl section configures how supervisorctl will connect to
; supervisord.  configure it match the settings in either the unix_http_server
; or inet_http_server section.

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket

[program:redis-server]
command=/usr/bin/redis-server
priority=1 ; redis needs to be running before workers start
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true

[program:httpsworker]
command=/usr/local/bin/rq worker --with-scheduler https dns ssl
process_name=%(program_name)s-%(process_num)s
numprocs=4 ; number of https workers
directory=/queue
stopsignal=TERM
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true

[program:sslworker]
command=/usr/local/bin/rq worker --with-scheduler ssl dns https
process_name=%(program_name)s-%(process_num)s
numprocs=4 ; number of ssl workers
directory=/queue
stopsignal=TERM
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true

[program:dnsworker]
command=/usr/local/bin/rq worker --with-scheduler dns ssl https
process_name=%(program_name)s-%(process_num)s
numprocs=4 ; number of dns workers
directory=/queue
stopsignal=TERM
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true

[program:gunicorn]
command=/usr/local/bin/gunicorn scan_queue:app -w 4 --timeout 300
directory=/queue
autostart=true
autorestart=true
redirect_stderr=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true
