"""empty message

Revision ID: a9d06213dccd
Revises: 2a25ac8483bc
Create Date: 2020-06-12 08:15:26.271254

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a9d06213dccd'
down_revision = '2a25ac8483bc'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mail_scans',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('domain_id', sa.Integer(), nullable=True),
    sa.Column('scan_date', sa.DateTime(), nullable=True),
    sa.Column('dmarc_phase', sa.Integer(), nullable=True),
    sa.Column('selectors', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('initiated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['domain_id'], ['domains.id'], ),
    sa.ForeignKeyConstraint(['initiated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('web_scans',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('domain_id', sa.Integer(), nullable=True),
    sa.Column('scan_date', sa.DateTime(), nullable=True),
    sa.Column('initiated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['domain_id'], ['domains.id'], ),
    sa.ForeignKeyConstraint(['initiated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_constraint('dkim_scans_id_fkey', 'dkim_scans', type_='foreignkey')
    op.create_foreign_key('dkim_scans_id_fkey', 'dkim_scans', 'mail_scans', ['id'], ['id'])
    op.drop_constraint('dmarc_scans_id_fkey', 'dmarc_scans', type_='foreignkey')
    op.create_foreign_key('dmarc_scans_id_fkey', 'dmarc_scans', 'mail_scans', ['id'], ['id'])
    op.drop_column('dmarc_scans', 'dmarc_phase')
    op.add_column('domains', sa.Column('selectors', postgresql.ARRAY(sa.String()), nullable=True))
    op.drop_constraint('https_scans_id_fkey', 'https_scans', type_='foreignkey')
    op.create_foreign_key('https_scans_id_fkey', 'https_scans', 'web_scans', ['id'], ['id'])
    op.drop_constraint('mx_scans_id_fkey', 'mx_scans', type_='foreignkey')
    op.create_foreign_key('mx_scans_id_fkey', 'mx_scans', 'mail_scans', ['id'], ['id'])
    op.drop_constraint('spf_scans_id_fkey', 'spf_scans', type_='foreignkey')
    op.create_foreign_key('spf_scans_id_fkey', 'spf_scans', 'mail_scans', ['id'], ['id'])
    op.drop_constraint('ssl_scans_id_fkey', 'ssl_scans', type_='foreignkey')
    op.create_foreign_key('ssl_scans_id_fkey', 'ssl_scans', 'web_scans', ['id'], ['id'])
    op.drop_table('scans')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scans',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('domain_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('scan_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('initiated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['domain_id'], ['domains.id'], name='scans_domain_id_fkey'),
    sa.ForeignKeyConstraint(['initiated_by'], ['users.id'], name='fk_users_id_scans'),
    sa.PrimaryKeyConstraint('id', name='scans_pkey')
    )
    op.drop_constraint('ssl_scans_id_fkey', 'ssl_scans', type_='foreignkey')
    op.create_foreign_key('ssl_scans_id_fkey', 'ssl_scans', 'scans', ['id'], ['id'])
    op.drop_constraint('spf_scans_id_fkey', 'spf_scans', type_='foreignkey')
    op.create_foreign_key('spf_scans_id_fkey', 'spf_scans', 'scans', ['id'], ['id'])
    op.drop_constraint('mx_scans_id_fkey', 'mx_scans', type_='foreignkey')
    op.create_foreign_key('mx_scans_id_fkey', 'mx_scans', 'scans', ['id'], ['id'])
    op.drop_constraint('https_scans_id_fkey', 'https_scans', type_='foreignkey')
    op.create_foreign_key('https_scans_id_fkey', 'https_scans', 'scans', ['id'], ['id'])
    op.drop_column('domains', 'selectors')
    op.add_column('dmarc_scans', sa.Column('dmarc_phase', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint('dmarc_scans_id_fkey', 'dmarc_scans', type_='foreignkey')
    op.create_foreign_key('dmarc_scans_id_fkey', 'dmarc_scans', 'scans', ['id'], ['id'])
    op.drop_constraint('dkim_scans_id_fkey', 'dkim_scans', type_='foreignkey')
    op.create_foreign_key('dkim_scans_id_fkey', 'dkim_scans', 'scans', ['id'], ['id'])
    op.drop_table('web_scans')
    op.drop_table('mail_scans')
    # ### end Alembic commands ###
