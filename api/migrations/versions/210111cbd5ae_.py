"""empty message

Revision ID: 210111cbd5ae
Revises: 
Create Date: 2020-02-14 08:15:16.902318

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '210111cbd5ae'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Classification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('UNCLASSIFIED', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('admins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('user_email', sa.String(), nullable=True),
    sa.Column('preferred_lang', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ciphers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cipher_type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('guidance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag_name', sa.String(), nullable=True),
    sa.Column('guidance', sa.String(), nullable=True),
    sa.Column('ref_links', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sectors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sector', sa.String(), nullable=True),
    sa.Column('zone', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('user_email', sa.String(), nullable=True),
    sa.Column('user_password', sa.String(), nullable=True),
    sa.Column('preferred_lang', sa.String(), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('tfa_validated', sa.Boolean(), nullable=True),
    sa.Column('user_role', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('admin_affiliations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sector_id', sa.Integer(), nullable=True),
    sa.Column('permission', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['admins.id'], ),
    sa.ForeignKeyConstraint(['sector_id'], ['sectors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('s_group', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('sector_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sector_id'], ['sectors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('domains',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('domain', sa.String(), nullable=True),
    sa.Column('last_run', sa.DateTime(), nullable=True),
    sa.Column('scan_spf', sa.Boolean(), nullable=True),
    sa.Column('scan_dmarc', sa.Boolean(), nullable=True),
    sa.Column('scan_dmarc_psl', sa.Boolean(), nullable=True),
    sa.Column('scan_mx', sa.Boolean(), nullable=True),
    sa.Column('scan_dkim', sa.Boolean(), nullable=True),
    sa.Column('scan_https', sa.Boolean(), nullable=True),
    sa.Column('scan_ssl', sa.Boolean(), nullable=True),
    sa.Column('dmarc_phase', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_affiliations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('permission', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('domain_id', sa.Integer(), nullable=True),
    sa.Column('scan_date', sa.DateTime(), nullable=True),
    sa.Column('initiated_by', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['domain_id'], ['domains.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dkim_scans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dkim_scan', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['scans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dmarc_scans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dmarc_scan', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['scans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('https_scans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('https_scan', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['scans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spf_scans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('spf_scan', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['scans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ssl_scans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ssl_scan', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['scans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ssl_scans')
    op.drop_table('spf_scans')
    op.drop_table('https_scans')
    op.drop_table('dmarc_scans')
    op.drop_table('dkim_scans')
    op.drop_table('scans')
    op.drop_table('user_affiliations')
    op.drop_table('domains')
    op.drop_table('organizations')
    op.drop_table('groups')
    op.drop_table('admin_affiliations')
    op.drop_table('users')
    op.drop_table('sectors')
    op.drop_table('guidance')
    op.drop_table('ciphers')
    op.drop_table('admins')
    op.drop_table('Classification')
    # ### end Alembic commands ###
