steps:
  - name: 'gcr.io/cloud-builders/docker'
    id: start_arango
    entrypoint: /bin/sh
    args:
      [
        '-c',
        'docker run -d --network=cloudbuild -p=8529:8529 -e ARANGO_ROOT_PASSWORD=$_DB_PASS --name=arangodb arangodb/arangodb:3.10.4',
      ]

  - name: mikewilliamson/wait-for
    id: wait_arango
    args: ['arangodb:8529']

  - name: node:alpine
    id: install
    dir: api
    entrypoint: npm
    args: ['ci', '--no-optional']

  - name: node:alpine
    id: lint
    dir: api
    entrypoint: npm
    args: ['run', lint]

  - name: node:alpine
    id: test
    dir: api
    entrypoint: npm
    args: ['test']
    env:
      - DB_PASS=$_DB_PASS
      - DB_URL=$_DB_URL
      - DB_NAME=$_DB_NAME
      - AUTHENTICATED_KEY=$_AUTHENTICATED_KEY
      - REFRESH_KEY=$_REFRESH_KEY
      - SIGN_IN_KEY=$_SIGN_IN_KEY
      - AUTH_TOKEN_EXPIRY=$_AUTH_TOKEN_EXPIRY
      - REFRESH_TOKEN_EXPIRY=$_REFRESH_TOKEN_EXPIRY
      - LOGIN_REQUIRED=$_LOGIN_REQUIRED
      - NOTIFICATION_API_KEY=$_NOTIFICATION_API_KEY
      - NOTIFICATION_API_URL=$_NOTIFICATION_API_URL
      - NOTIFICATION_AUTHENTICATE_EMAIL_ID=$_NOTIFICATION_TEST_TEMPLATE_ID
      - NOTIFICATION_AUTHENTICATE_TEXT_ID=$_NOTIFICATION_TEST_TEMPLATE_ID
      - NOTIFICATION_ORG_INVITE_REQUEST_BILINGUAL=$_NOTIFICATION_TEST_TEMPLATE_ID
      - NOTIFICATION_PASSWORD_RESET_BILINGUAL=$_NOTIFICATION_TEST_TEMPLATE_ID
      - NOTIFICATION_TWO_FACTOR_CODE_EN=$_NOTIFICATION_TEST_TEMPLATE_ID
      - NOTIFICATION_TWO_FACTOR_CODE_FR=$_NOTIFICATION_TEST_TEMPLATE_ID
      - NOTIFICATION_VERIFICATION_EMAIL_EN=$_NOTIFICATION_TEST_TEMPLATE_ID
      - NOTIFICATION_VERIFICATION_EMAIL_FR=$_NOTIFICATION_TEST_TEMPLATE_ID
      - NOTIFICATION_ORG_INVITE_BILINGUAL=$_NOTIFICATION_TEST_TEMPLATE_ID
      - DEPTH_LIMIT=$_DEPTH_LIMIT
      - COST_LIMIT=$_COST_LIMIT
      - SCALAR_COST=$_SCALAR_COST
      - OBJECT_COST=$_OBJECT_COST
      - LIST_FACTOR=$_LIST_FACTOR
      - CIPHER_KEY=$_CIPHER_KEY
      - TRACING_ENABLED=$_TRACING_ENABLED
      - HASHING_SALT=$_HASHING_SALT
      - LOGIN_REQUIRED=false
      - NATS_URL=$_NATS_URL
      - NOTIFICATION_ORG_INVITE_CREATE_ACCOUNT_BILINGUAL=$_NOTIFICATION_TEST_TEMPLATE_ID
      - SERVICE_ACCOUNT_EMAIL=$_SERVICE_ACCOUNT_EMAIL

  - name: node:alpine
    id: lingui-extract
    dir: api
    entrypoint: npm
    args: ['run', 'extract']

  - name: node:alpine
    id: lingui-compile
    dir: api
    entrypoint: npm
    args: ['run', 'compile']

  - name: 'gcr.io/cloud-builders/docker'
    id: generate-image-name
    entrypoint: 'bash'
    dir: api
    args:
      - '-c'
      - |
        echo "northamerica-northeast1-docker.pkg.dev/track-compliance/tracker/api-js:$BRANCH_NAME-$SHORT_SHA-$(date +%s)" > /workspace/imagename

  - name: 'gcr.io/cloud-builders/docker'
    id: build-if-master
    entrypoint: 'bash'
    dir: api
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "master" ]]
        then
          image=$(cat /workspace/imagename)
          docker build -t $image .
        else
          exit 0
        fi

  - name: 'gcr.io/cloud-builders/docker'
    id: push-if-master
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "master" ]]
        then
          image=$(cat /workspace/imagename)
          docker push $image
        else
          exit 0
        fi

timeout: 1200s
options:
  machineType: 'E2_HIGHCPU_8'
