import graphene


class GroupEnums(graphene.Enum):
	GC_A = 'GC_A'
	GC_BF = 'GC_BF'
	GC_BSI = 'GC_BSI'
	GC_GA = 'GC_GA'
	GC_H = 'GC_H'
	GC_IBD = 'GC_IBD'
	GC_IATD = 'GC_IATD'
	GC_L = 'GC_L'
	GC_NRED = 'GC_NRED'
	GC_SID = 'GC_SID'
	GC_T = 'GC_T'
	GC_SCD = 'GC_SCD'
	GC_F = 'GC_F'
	CI_PT = 'CI_PT'
	CI_PT_BC = 'CI_PT_BC'
	CI_PT_AB = 'CI_PT_AB'
	CI_PT_SK = 'CI_PT_SK'
	CI_PT_MB = 'CI_PT_MB'
	CI_PT_ON = 'CI_PT_ON'
	CI_PT_QC = 'CI_PT_QC'
	CI_PT_NB = 'CI_PT_NB'
	CI_PT_NS = 'CI_PT_NS'
	CI_PT_PEI = 'CI_PT_PEI'
	CI_PT_NL = 'CI_PT_NL'
	CI_PT_YT = 'CI_PT_YT'
	CI_PT_NU = 'CI_PT_NU'
	CI_PT_NT = 'CI_PT_NT'
	CI_MUNIC = 'CI_MUNIC'
	CI_MUNIC_BC = 'CI_MUNIC_BC'
	CI_MUNIC_AB = 'CI_MUNIC_AB'
	CI_MUNIC_SK = 'CI_MUNIC_SK'
	CI_MUNIC_MB = 'CI_MUNIC_MB'
	CI_MUNIC_ON = 'CI_MUNIC_ON'
	CI_MUNIC_QC = 'CI_MUNIC_QC'
	CI_MUNIC_NB = 'CI_MUNIC_NB'
	CI_MUNIC_NS = 'CI_MUNIC_NS'
	CI_MUNIC_PEI = 'CI_MUNIC_PEI'
	CI_MUNIC_NL = 'CI_MUNIC_NL'
	CI_MUNIC_YT = 'CI_MUNIC_YT'
	CI_MUNIC_NU = 'CI_MUNIC_NU'
	CI_MUNIC_NT = 'CI_MUNIC_NT'
	CI_ICT = 'CI_ICT'
	CI_FIN = 'CI_FIN'
	CI_UTIL = 'CI_UTIL'
	CI_UTIL_ELECT = 'CI_UTIL_ELECT'
	CI_UTIL_OIL = 'CI_UTIL_OIL'
	CI_UTIL_NCLR = 'CI_UTIL_NCLR'
	CI_UTIL_MINE = 'CI_UTIL_MINE'
	CI_TRANS = 'CI_TRANS'
	CI_TRANS_AIR = 'CI_TRANS_AIR'
	CI_TRANS_SEA = 'CI_TRANS_SEA'
	CI_TRANS_RAIL = 'CI_TRANS_RAIL'
	CI_TRANS_ROAD = 'CI_TRANS_ROAD'
	CI_MANUF = 'CI_MANUF'
	CI_HEALTH = 'CI_HEALTH'
	CI_FOOD = 'CI_FOOD'
	CI_WATER = 'CI_WATER'
	CI_SAFETY = 'CI_SAFETY'
	CI_OTHER = 'CI_OTHER'
	CI_SCADA = 'CI_SCADA'
	CI_CYBER = 'CI_CYBER'
	CI_EDU = 'CI_EDU'
	CI_NCSI = 'CI_NCSI'
	S1 = 'S1'
	S2 = 'S2'
	S3 = 'S3'
	S4 = 'S4'

	@property
	def description(self):
		if self == GroupEnums.GC_A: return 'Arts'
		elif self == GroupEnums.GC_BF: return 'Banking and Finance'
		elif self == GroupEnums.GC_BSI: return 'Border Services and Immigration'
		elif self == GroupEnums.GC_GA: return 'Government Administration'
		elif self == GroupEnums.GC_H: return 'Health'
		elif self == GroupEnums.GC_IBD: return 'Industry and Business Development'
		elif self == GroupEnums.GC_IATD: return 'International Affairs Trade & Development'
		elif self == GroupEnums.GC_L: return 'Legal'
		elif self == GroupEnums.GC_NRED: return 'Natural Resources Energy & Environment'
		elif self == GroupEnums.GC_SID: return 'Security Intelligence and Defence'
		elif self == GroupEnums.GC_T: return 'Transportation'
		elif self == GroupEnums.GC_SCD: return 'Social and Cultural Development'
		elif self == GroupEnums.GC_F: return 'Government of Canada Future'
		elif self == GroupEnums.CI_PT: return 'Government (Provincial/Territorial)'
		elif self == GroupEnums.CI_PT_BC: return 'British Columbia'
		elif self == GroupEnums.CI_PT_AB: return 'Alberta'
		elif self == GroupEnums.CI_PT_SK: return 'Saskatchewan'
		elif self == GroupEnums.CI_PT_MB: return 'Manitoba'
		elif self == GroupEnums.CI_PT_ON: return 'Ontario'
		elif self == GroupEnums.CI_PT_QC: return 'Quebec'
		elif self == GroupEnums.CI_PT_NB: return 'New Brunswick'
		elif self == GroupEnums.CI_PT_NS: return 'Nova Scotia'
		elif self == GroupEnums.CI_PT_PEI: return 'Prince Edward Island'
		elif self == GroupEnums.CI_PT_NL: return 'Newfoundland and Labrador'
		elif self == GroupEnums.CI_PT_YT: return 'Yukon'
		elif self == GroupEnums.CI_PT_NU: return 'Nunavut'
		elif self == GroupEnums.CI_PT_NT: return 'Northwest Territories'
		elif self == GroupEnums.CI_MUNIC: return 'Government (Municipal)'
		elif self == GroupEnums.CI_MUNIC_BC: return 'British Columbia'
		elif self == GroupEnums.CI_MUNIC_AB: return 'Alberta'
		elif self == GroupEnums.CI_MUNIC_SK: return 'Saskatchewan'
		elif self == GroupEnums.CI_MUNIC_MB: return 'Manitoba'
		elif self == GroupEnums.CI_MUNIC_ON: return 'Ontario'
		elif self == GroupEnums.CI_MUNIC_QC: return 'Quebec'
		elif self == GroupEnums.CI_MUNIC_NB: return 'New Brunswick'
		elif self == GroupEnums.CI_MUNIC_NS: return 'Nova Scotia'
		elif self == GroupEnums.CI_MUNIC_PEI: return 'Prince Edward Island'
		elif self == GroupEnums.CI_MUNIC_NL: return 'Newfoundland and Labrador'
		elif self == GroupEnums.CI_MUNIC_YT: return 'Yukon'
		elif self == GroupEnums.CI_MUNIC_NU: return 'Nunavut'
		elif self == GroupEnums.CI_MUNIC_NT: return 'Northwest Territories'
		elif self == GroupEnums.CI_ICT: return 'Information and Communication Technology'
		elif self == GroupEnums.CI_FIN: return 'Finance'
		elif self == GroupEnums.CI_UTIL: return 'Energy and Utilities'
		elif self == GroupEnums.CI_UTIL_ELECT: return 'Electricity'
		elif self == GroupEnums.CI_UTIL_OIL: return 'Oil and Gas'
		elif self == GroupEnums.CI_UTIL_NCLR: return 'Nuclear'
		elif self == GroupEnums.CI_UTIL_MINE: return 'Mines and Minerals'
		elif self == GroupEnums.CI_TRANS: return 'Transportation'
		elif self == GroupEnums.CI_TRANS_AIR: return 'Air'
		elif self == GroupEnums.CI_TRANS_SEA: return 'Marine'
		elif self == GroupEnums.CI_TRANS_RAIL: return 'Rail'
		elif self == GroupEnums.CI_TRANS_ROAD: return 'Road'
		elif self == GroupEnums.CI_MANUF: return 'Manufacturing'
		elif self == GroupEnums.CI_HEALTH: return 'Health'
		elif self == GroupEnums.CI_FOOD: return 'Food'
		elif self == GroupEnums.CI_WATER: return 'Water'
		elif self == GroupEnums.CI_SAFETY: return 'Safety'
		elif self == GroupEnums.CI_OTHER: return 'Other'
		elif self == GroupEnums.CI_SCADA: return 'Industrial Control Systems'
		elif self == GroupEnums.CI_CYBER: return 'Cyber Security'
		elif self == GroupEnums.CI_EDU: return 'Academia'
		elif self == GroupEnums.CI_NCSI: return 'Non-Critical'
		elif self == GroupEnums.S1: return 'Assess'
		elif self == GroupEnums.S2: return 'Deploy'
		elif self == GroupEnums.S3: return 'Enforce'
		elif self == GroupEnums.S4: return 'Maintain'
