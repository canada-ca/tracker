apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-ingressgateway-service-account
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    istio: ingressgateway
    release: istio
    istio.io/rev: default
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: IngressGateways
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-reader-service-account
  namespace: istio-system
  labels:
    app: istio-reader
    release: istio
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istiod
  namespace: istio-system
  labels:
    app: istiod
    release: istio
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istiod-service-account
  namespace: istio-system
  labels:
    app: istiod
    release: istio
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: istio-reader-clusterrole-istio-system
  labels:
    app: istio-reader
    release: istio
rules:
  - apiGroups:
      - config.istio.io
      - security.istio.io
      - networking.istio.io
      - authentication.istio.io
      - rbac.istio.io
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - endpoints
      - pods
      - services
      - nodes
      - replicationcontrollers
      - namespaces
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.istio.io
    verbs:
      - get
      - watch
      - list
    resources:
      - workloadentries
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceexports
    verbs:
      - get
      - list
      - watch
      - create
      - delete
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceimports
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: istio-reader-istio-system
  labels:
    app: istio-reader
    release: istio
rules:
  - apiGroups:
      - config.istio.io
      - security.istio.io
      - networking.istio.io
      - authentication.istio.io
      - rbac.istio.io
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - endpoints
      - pods
      - services
      - nodes
      - replicationcontrollers
      - namespaces
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.istio.io
    verbs:
      - get
      - watch
      - list
    resources:
      - workloadentries
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceexports
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceimports
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: istiod-clusterrole-istio-system
  labels:
    app: istiod
    release: istio
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - config.istio.io
      - security.istio.io
      - networking.istio.io
      - authentication.istio.io
      - rbac.istio.io
      - telemetry.istio.io
      - extensions.istio.io
    verbs:
      - get
      - watch
      - list
    resources:
      - '*'
  - apiGroups:
      - networking.istio.io
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
    resources:
      - workloadentries
  - apiGroups:
      - networking.istio.io
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
    resources:
      - workloadentries/status
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - pods
      - nodes
      - services
      - namespaces
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - '*'
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - create
      - get
      - list
      - watch
      - update
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests
      - certificatesigningrequests/approval
      - certificatesigningrequests/status
    verbs:
      - update
      - create
      - get
      - delete
      - watch
  - apiGroups:
      - certificates.k8s.io
    resources:
      - signers
    resourceNames:
      - kubernetes.io/legacy-unknown
    verbs:
      - approve
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
  - apiGroups:
      - networking.x-k8s.io
      - gateway.networking.k8s.io
    resources:
      - '*'
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - networking.x-k8s.io
      - gateway.networking.k8s.io
    resources:
      - '*'
    verbs:
      - update
      - patch
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceexports
    verbs:
      - get
      - watch
      - list
      - create
      - delete
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceimports
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: istiod-gateway-controller-istio-system
  labels:
    app: istiod
    release: istio
rules:
  - apiGroups:
      - apps
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
    resources:
      - deployments
  - apiGroups:
      - ''
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
    resources:
      - services
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: istiod-istio-system
  labels:
    app: istiod
    release: istio
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - config.istio.io
      - security.istio.io
      - networking.istio.io
      - authentication.istio.io
      - rbac.istio.io
      - telemetry.istio.io
    verbs:
      - get
      - watch
      - list
    resources:
      - '*'
  - apiGroups:
      - networking.istio.io
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
    resources:
      - workloadentries
  - apiGroups:
      - networking.istio.io
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
    resources:
      - workloadentries/status
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - pods
      - nodes
      - services
      - namespaces
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - '*'
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - create
      - get
      - list
      - watch
      - update
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests
      - certificatesigningrequests/approval
      - certificatesigningrequests/status
    verbs:
      - update
      - create
      - get
      - delete
      - watch
  - apiGroups:
      - certificates.k8s.io
    resources:
      - signers
    resourceNames:
      - kubernetes.io/legacy-unknown
    verbs:
      - approve
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
  - apiGroups:
      - networking.x-k8s.io
      - gateway.networking.k8s.io
    resources:
      - '*'
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - networking.x-k8s.io
      - gateway.networking.k8s.io
    resources:
      - '*'
    verbs:
      - update
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceexports
    verbs:
      - get
      - watch
      - list
      - create
      - delete
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceimports
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-reader-clusterrole-istio-system
  labels:
    app: istio-reader
    release: istio
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-reader-clusterrole-istio-system
subjects:
  - kind: ServiceAccount
    name: istio-reader-service-account
    namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-reader-istio-system
  labels:
    app: istio-reader
    release: istio
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-reader-istio-system
subjects:
  - kind: ServiceAccount
    name: istio-reader-service-account
    namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istiod-clusterrole-istio-system
  labels:
    app: istiod
    release: istio
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istiod-clusterrole-istio-system
subjects:
  - kind: ServiceAccount
    name: istiod
    namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istiod-gateway-controller-istio-system
  labels:
    app: istiod
    release: istio
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istiod-gateway-controller-istio-system
subjects:
  - kind: ServiceAccount
    name: istiod
    namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istiod-istio-system
  labels:
    app: istiod
    release: istio
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istiod-istio-system
subjects:
  - kind: ServiceAccount
    name: istiod-service-account
    namespace: istio-system
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: istio-validator-istio-system
  labels:
    app: istiod
    release: istio
    istio: istiod
    istio.io/rev: default
webhooks:
  - name: rev.validation.istio.io
    clientConfig:
      service:
        name: istiod
        namespace: istio-system
        path: /validate
      caBundle: ''
    rules:
      - operations:
          - CREATE
          - UPDATE
        apiGroups:
          - security.istio.io
          - networking.istio.io
          - telemetry.istio.io
          - extensions.istio.io
        apiVersions:
          - '*'
        resources:
          - '*'
    failurePolicy: Ignore
    sideEffects: None
    admissionReviewVersions:
      - v1beta1
      - v1
    objectSelector:
      matchExpressions:
        - key: istio.io/rev
          operator: In
          values:
            - default
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: stats-filter-1.11
  namespace: istio-system
  labels:
    istio.io/rev: default
spec:
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_OUTBOUND
        proxy:
          proxyVersion: ^1\.11.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
              subFilter:
                name: envoy.filters.http.router
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
            value:
              config:
                root_id: stats_outbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    \n}\n"
                vm_config:
                  vm_id: stats_outbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_INBOUND
        proxy:
          proxyVersion: ^1\.11.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
              subFilter:
                name: envoy.filters.http.router
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
            value:
              config:
                root_id: stats_inbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    ,\n  \"disable_host_header_fallback\": true,\n  \"metrics\": [\n\
                    \    {\n      \"dimensions\": {\n        \"destination_cluster\"\
                    : \"node.metadata['CLUSTER_ID']\",\n        \"source_cluster\"\
                    : \"downstream_peer.cluster_id\"\n      }\n    }\n  ]\n}\n"
                vm_config:
                  vm_id: stats_inbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
    - applyTo: HTTP_FILTER
      match:
        context: GATEWAY
        proxy:
          proxyVersion: ^1\.11.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
              subFilter:
                name: envoy.filters.http.router
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
            value:
              config:
                root_id: stats_outbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    ,\n  \"disable_host_header_fallback\": true\n}\n"
                vm_config:
                  vm_id: stats_outbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: stats-filter-1.12
  namespace: istio-system
  labels:
    istio.io/rev: default
spec:
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_OUTBOUND
        proxy:
          proxyVersion: ^1\.12.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
              subFilter:
                name: envoy.filters.http.router
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
            value:
              config:
                root_id: stats_outbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    \n}\n"
                vm_config:
                  vm_id: stats_outbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_INBOUND
        proxy:
          proxyVersion: ^1\.12.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
              subFilter:
                name: envoy.filters.http.router
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
            value:
              config:
                root_id: stats_inbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    ,\n  \"disable_host_header_fallback\": true,\n  \"metrics\": [\n\
                    \    {\n      \"dimensions\": {\n        \"destination_cluster\"\
                    : \"node.metadata['CLUSTER_ID']\",\n        \"source_cluster\"\
                    : \"downstream_peer.cluster_id\"\n      }\n    }\n  ]\n}\n"
                vm_config:
                  vm_id: stats_inbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
    - applyTo: HTTP_FILTER
      match:
        context: GATEWAY
        proxy:
          proxyVersion: ^1\.12.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
              subFilter:
                name: envoy.filters.http.router
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
            value:
              config:
                root_id: stats_outbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    ,\n  \"disable_host_header_fallback\": true\n}\n"
                vm_config:
                  vm_id: stats_outbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: stats-filter-1.13
  namespace: istio-system
  labels:
    istio.io/rev: default
spec:
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_OUTBOUND
        proxy:
          proxyVersion: ^1\.13.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
              subFilter:
                name: envoy.filters.http.router
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
            value:
              config:
                root_id: stats_outbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    \n}\n"
                vm_config:
                  vm_id: stats_outbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_INBOUND
        proxy:
          proxyVersion: ^1\.13.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
              subFilter:
                name: envoy.filters.http.router
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
            value:
              config:
                root_id: stats_inbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    ,\n  \"disable_host_header_fallback\": true,\n  \"metrics\": [\n\
                    \    {\n      \"dimensions\": {\n        \"destination_cluster\"\
                    : \"node.metadata['CLUSTER_ID']\",\n        \"source_cluster\"\
                    : \"downstream_peer.cluster_id\"\n      }\n    }\n  ]\n}\n"
                vm_config:
                  vm_id: stats_inbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
    - applyTo: HTTP_FILTER
      match:
        context: GATEWAY
        proxy:
          proxyVersion: ^1\.13.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
              subFilter:
                name: envoy.filters.http.router
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
            value:
              config:
                root_id: stats_outbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    ,\n  \"disable_host_header_fallback\": true\n}\n"
                vm_config:
                  vm_id: stats_outbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: tcp-stats-filter-1.11
  namespace: istio-system
  labels:
    istio.io/rev: default
spec:
  configPatches:
    - applyTo: NETWORK_FILTER
      match:
        context: SIDECAR_INBOUND
        proxy:
          proxyVersion: ^1\.11.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.tcp_proxy
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
            value:
              config:
                root_id: stats_inbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    ,\n  \"metrics\": [\n    {\n      \"dimensions\": {\n        \"\
                    destination_cluster\": \"node.metadata['CLUSTER_ID']\",\n    \
                    \    \"source_cluster\": \"downstream_peer.cluster_id\"\n    \
                    \  }\n    }\n  ]\n}\n"
                vm_config:
                  vm_id: tcp_stats_inbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
    - applyTo: NETWORK_FILTER
      match:
        context: SIDECAR_OUTBOUND
        proxy:
          proxyVersion: ^1\.11.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.tcp_proxy
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
            value:
              config:
                root_id: stats_outbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    \n}\n"
                vm_config:
                  vm_id: tcp_stats_outbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
    - applyTo: NETWORK_FILTER
      match:
        context: GATEWAY
        proxy:
          proxyVersion: ^1\.11.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.tcp_proxy
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
            value:
              config:
                root_id: stats_outbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    \n}\n"
                vm_config:
                  vm_id: tcp_stats_outbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: tcp-stats-filter-1.12
  namespace: istio-system
  labels:
    istio.io/rev: default
spec:
  configPatches:
    - applyTo: NETWORK_FILTER
      match:
        context: SIDECAR_INBOUND
        proxy:
          proxyVersion: ^1\.12.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.tcp_proxy
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
            value:
              config:
                root_id: stats_inbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    ,\n  \"metrics\": [\n    {\n      \"dimensions\": {\n        \"\
                    destination_cluster\": \"node.metadata['CLUSTER_ID']\",\n    \
                    \    \"source_cluster\": \"downstream_peer.cluster_id\"\n    \
                    \  }\n    }\n  ]\n}\n"
                vm_config:
                  vm_id: tcp_stats_inbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
    - applyTo: NETWORK_FILTER
      match:
        context: SIDECAR_OUTBOUND
        proxy:
          proxyVersion: ^1\.12.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.tcp_proxy
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
            value:
              config:
                root_id: stats_outbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    \n}\n"
                vm_config:
                  vm_id: tcp_stats_outbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
    - applyTo: NETWORK_FILTER
      match:
        context: GATEWAY
        proxy:
          proxyVersion: ^1\.12.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.tcp_proxy
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
            value:
              config:
                root_id: stats_outbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    \n}\n"
                vm_config:
                  vm_id: tcp_stats_outbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: tcp-stats-filter-1.13
  namespace: istio-system
  labels:
    istio.io/rev: default
spec:
  configPatches:
    - applyTo: NETWORK_FILTER
      match:
        context: SIDECAR_INBOUND
        proxy:
          proxyVersion: ^1\.13.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.tcp_proxy
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
            value:
              config:
                root_id: stats_inbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    ,\n  \"metrics\": [\n    {\n      \"dimensions\": {\n        \"\
                    destination_cluster\": \"node.metadata['CLUSTER_ID']\",\n    \
                    \    \"source_cluster\": \"downstream_peer.cluster_id\"\n    \
                    \  }\n    }\n  ]\n}\n"
                vm_config:
                  vm_id: tcp_stats_inbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
    - applyTo: NETWORK_FILTER
      match:
        context: SIDECAR_OUTBOUND
        proxy:
          proxyVersion: ^1\.13.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.tcp_proxy
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
            value:
              config:
                root_id: stats_outbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    \n}\n"
                vm_config:
                  vm_id: tcp_stats_outbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
    - applyTo: NETWORK_FILTER
      match:
        context: GATEWAY
        proxy:
          proxyVersion: ^1\.13.*
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.tcp_proxy
      patch:
        operation: INSERT_BEFORE
        value:
          name: istio.stats
          typed_config:
            '@type': type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
            value:
              config:
                root_id: stats_outbound
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\
                    \n}\n"
                vm_config:
                  vm_id: tcp_stats_outbound
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: envoy.wasm.stats
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio
  namespace: istio-system
  labels:
    istio.io/rev: default
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: Pilot
    release: istio
data:
  meshNetworks: 'networks: {}'
  mesh: "defaultConfig:\n  discoveryAddress: istiod.istio-system.svc:15012\n  proxyMetadata:\
    \ {}\n  tracing:\n    zipkin:\n      address: zipkin.istio-system:9411\nenablePrometheusMerge:\
    \ true\nrootNamespace: istio-system\ntrustDomain: cluster.local"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio-sidecar-injector
  namespace: istio-system
  labels:
    istio.io/rev: default
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: Pilot
    release: istio
data:
  values: "{\n  \"global\": {\n    \"caAddress\": \"\",\n    \"caName\": \"\",\n \
    \   \"configCluster\": false,\n    \"configValidation\": true,\n    \"defaultNodeSelector\"\
    : {},\n    \"defaultPodDisruptionBudget\": {\n      \"enabled\": true\n    },\n\
    \    \"defaultResources\": {\n      \"requests\": {\n        \"cpu\": \"10m\"\n\
    \      }\n    },\n    \"enabled\": true,\n    \"externalIstiod\": false,\n   \
    \ \"hub\": \"docker.io/istio\",\n    \"imagePullPolicy\": \"\",\n    \"imagePullSecrets\"\
    : [],\n    \"istioNamespace\": \"istio-system\",\n    \"istiod\": {\n      \"\
    enableAnalysis\": false\n    },\n    \"jwtPolicy\": \"third-party-jwt\",\n   \
    \ \"logAsJson\": false,\n    \"logging\": {\n      \"level\": \"default:info\"\
    \n    },\n    \"meshID\": \"\",\n    \"meshNetworks\": {},\n    \"mountMtlsCerts\"\
    : false,\n    \"multiCluster\": {\n      \"clusterName\": \"\",\n      \"enabled\"\
    : false\n    },\n    \"namespace\": \"istio-system\",\n    \"network\": \"\",\n\
    \    \"omitSidecarInjectorConfigMap\": false,\n    \"oneNamespace\": false,\n\
    \    \"operatorManageWebhooks\": false,\n    \"pilotCertProvider\": \"istiod\"\
    ,\n    \"priorityClassName\": \"\",\n    \"proxy\": {\n      \"autoInject\": \"\
    enabled\",\n      \"clusterDomain\": \"cluster.local\",\n      \"componentLogLevel\"\
    : \"misc:error\",\n      \"enableCoreDump\": false,\n      \"excludeIPRanges\"\
    : \"\",\n      \"excludeInboundPorts\": \"\",\n      \"excludeOutboundPorts\"\
    : \"\",\n      \"holdApplicationUntilProxyStarts\": false,\n      \"image\": \"\
    proxyv2\",\n      \"includeIPRanges\": \"*\",\n      \"includeInboundPorts\":\
    \ \"*\",\n      \"includeOutboundPorts\": \"\",\n      \"logLevel\": \"warning\"\
    ,\n      \"privileged\": false,\n      \"readinessFailureThreshold\": 30,\n  \
    \    \"readinessInitialDelaySeconds\": 1,\n      \"readinessPeriodSeconds\": 2,\n\
    \      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"2000m\",\n\
    \          \"memory\": \"1024Mi\"\n        },\n        \"requests\": {\n     \
    \     \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n\
    \      \"statusPort\": 15020,\n      \"tracer\": \"zipkin\"\n    },\n    \"proxy_init\"\
    : {\n      \"image\": \"proxyv2\",\n      \"resources\": {\n        \"limits\"\
    : {\n          \"cpu\": \"2000m\",\n          \"memory\": \"1024Mi\"\n       \
    \ },\n        \"requests\": {\n          \"cpu\": \"10m\",\n          \"memory\"\
    : \"10Mi\"\n        }\n      }\n    },\n    \"remotePilotAddress\": \"\",\n  \
    \  \"sds\": {\n      \"token\": {\n        \"aud\": \"istio-ca\"\n      }\n  \
    \  },\n    \"sts\": {\n      \"servicePort\": 0\n    },\n    \"tag\": \"1.13.2\"\
    ,\n    \"tracer\": {\n      \"datadog\": {\n        \"address\": \"$(HOST_IP):8126\"\
    \n      },\n      \"lightstep\": {\n        \"accessToken\": \"\",\n        \"\
    address\": \"\"\n      },\n      \"stackdriver\": {\n        \"debug\": false,\n\
    \        \"maxNumberOfAnnotations\": 200,\n        \"maxNumberOfAttributes\":\
    \ 200,\n        \"maxNumberOfMessageEvents\": 200\n      },\n      \"zipkin\"\
    : {\n        \"address\": \"\"\n      }\n    },\n    \"useMCP\": false\n  },\n\
    \  \"istio_cni\": {\n    \"enabled\": false\n  },\n  \"revision\": \"\",\n  \"\
    sidecarInjectorWebhook\": {\n    \"alwaysInjectSelector\": [],\n    \"defaultTemplates\"\
    : [],\n    \"enableNamespacesByDefault\": false,\n    \"injectedAnnotations\"\
    : {},\n    \"neverInjectSelector\": [],\n    \"objectSelector\": {\n      \"autoInject\"\
    : true,\n      \"enabled\": true\n    },\n    \"rewriteAppHTTPProbe\": true,\n\
    \    \"templates\": {}\n  }\n}"
  config: "# defaultTemplates defines the default template to use for pods that do\
    \ not explicitly specify a template\ndefaultTemplates: [sidecar]\npolicy: enabled\n\
    alwaysInjectSelector:\n  []\nneverInjectSelector:\n  []\ninjectedAnnotations:\n\
    template: \"{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation\
    \ }}\"\ntemplates:\n  sidecar: |\n    {{- define \"resources\"  }}\n      {{-\
    \ if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`)\
    \ (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\n   \
    \     {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset\
    \ .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}\n          requests:\n\
    \            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`)\
    \ -}}\n            cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`\
    \ }}\"\n            {{ end }}\n            {{ if (isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemory`) -}}\n            memory: \"{{ index .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemory` }}\"\n            {{ end }}\n        {{- end\
    \ }}\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`)\
    \ (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\n   \
    \       limits:\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`)\
    \ -}}\n            cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`\
    \ }}\"\n            {{ end }}\n            {{ if (isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemoryLimit`) -}}\n            memory: \"{{ index .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemoryLimit` }}\"\n            {{ end }}\n        {{-\
    \ end }}\n      {{- else }}\n        {{- if .Values.global.proxy.resources }}\n\
    \          {{ toYaml .Values.global.proxy.resources | indent 6 }}\n        {{-\
    \ end }}\n      {{- end }}\n    {{- end }}\n    {{- $containers := list }}\n \
    \   {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name\
    \ \"istio-proxy\") }}{{ $containers = append $containers $container.Name }}{{end}}{{-\
    \ end}}\n    metadata:\n      labels:\n        security.istio.io/tlsMode: {{ index\
    \ .ObjectMeta.Labels `security.istio.io/tlsMode` | default \"istio\"  | quote\
    \ }}\n        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name`\
    \ | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index\
    \ .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}\n     \
    \   service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision`\
    \ | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index\
    \ .ObjectMeta.Labels `version`) | default \"latest\"  | quote }}\n      annotations:\
    \ {\n        {{- if eq (len $containers) 1 }}\n        kubectl.kubernetes.io/default-logs-container:\
    \ \"{{ index $containers 0 }}\",\n        kubectl.kubernetes.io/default-container:\
    \ \"{{ index $containers 0 }}\",\n        {{ end }}\n    {{- if .Values.istio_cni.enabled\
    \ }}\n        {{- if not .Values.istio_cni.chained }}\n        k8s.v1.cni.cncf.io/networks:\
    \ '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`)\
    \ `istio-cni` }}',\n        {{- end }}\n        sidecar.istio.io/interceptionMode:\
    \ \"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode\
    \ }}\",\n        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges`\
    \ .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges:\
    \ \"{{.}}\",{{ end }}\n        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges`\
    \ .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges:\
    \ \"{{.}}\",{{ end }}\n        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts`\
    \ .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts:\
    \ \"{{.}}\",{{ end }}\n        traffic.sidecar.istio.io/excludeInboundPorts: \"\
    {{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort)\
    \ (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts)\
    \ }}\",\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`)\
    \ (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts \"\") \"\") }}\n\
    \        traffic.sidecar.istio.io/includeOutboundPorts: \"{{ annotation .ObjectMeta\
    \ `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts\
    \ }}\",\n        {{- end }}\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`)\
    \ (ne .Values.global.proxy.excludeOutboundPorts \"\") }}\n        traffic.sidecar.istio.io/excludeOutboundPorts:\
    \ \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts`\
    \ .Values.global.proxy.excludeOutboundPorts }}\",\n        {{- end }}\n      \
    \  {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`\
    \ }}traffic.sidecar.istio.io/kubevirtInterfaces: \"{{.}}\",{{ end }}\n    {{-\
    \ end }}\n      }\n    spec:\n      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue\
    \ .Values.global.proxy.holdApplicationUntilProxyStarts }}\n      initContainers:\n\
    \      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode)\
    \ `NONE` }}\n      {{ if .Values.istio_cni.enabled -}}\n      - name: istio-validation\n\
    \      {{ else -}}\n      - name: istio-init\n      {{ end -}}\n      {{- if contains\
    \ \"/\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image)\
    \ }}\n        image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage`\
    \ .Values.global.proxy_init.image }}\"\n      {{- else }}\n        image: \"{{\
    \ .ProxyImage }}\"\n      {{- end }}\n        args:\n        - istio-iptables\n\
    \        - \"-p\"\n        - {{ .MeshConfig.ProxyListenPort | default \"15001\"\
    \ | quote }}\n        - \"-z\"\n        - \"15006\"\n        - \"-u\"\n      \
    \  - \"1337\"\n        - \"-m\"\n        - \"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode`\
    \ .ProxyConfig.InterceptionMode }}\"\n        - \"-i\"\n        - \"{{ annotation\
    \ .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges\
    \ }}\"\n        - \"-x\"\n        - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges`\
    \ .Values.global.proxy.excludeIPRanges }}\"\n        - \"-b\"\n        - \"{{\
    \ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts\
    \ }}\"\n        - \"-d\"\n      {{- if excludeInboundPort (annotation .ObjectMeta\
    \ `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation\
    \ .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts)\
    \ }}\n        - \"15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port`\
    \ .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts`\
    \ .Values.global.proxy.excludeInboundPorts) }}\"\n      {{- else }}\n        -\
    \ \"15090,15021\"\n      {{- end }}\n        {{ if or (isset .ObjectMeta.Annotations\
    \ `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts\
    \ \"\") \"\") -}}\n        - \"-q\"\n        - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts`\
    \ .Values.global.proxy.includeOutboundPorts }}\"\n        {{ end -}}\n       \
    \ {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`)\
    \ (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts \"\") \"\") -}}\n\
    \        - \"-o\"\n        - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts`\
    \ .Values.global.proxy.excludeOutboundPorts }}\"\n        {{ end -}}\n       \
    \ {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`)\
    \ -}}\n        - \"-k\"\n        - \"{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`\
    \ }}\"\n        {{ end -}}\n        {{ if .Values.istio_cni.enabled -}}\n    \
    \    - \"--run-validation\"\n        - \"--skip-rule-apply\"\n        {{ end -}}\n\
    \        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \"{{.}}\"{{end}}\n\
    \      {{- if .ProxyConfig.ProxyMetadata }}\n        env:\n        {{- range $key,\
    \ $value := .ProxyConfig.ProxyMetadata }}\n        - name: {{ $key }}\n      \
    \    value: \"{{ $value }}\"\n        {{- end }}\n      {{- end }}\n        resources:\n\
    \      {{ template \"resources\" . }}\n        securityContext:\n          allowPrivilegeEscalation:\
    \ {{ .Values.global.proxy.privileged }}\n          privileged: {{ .Values.global.proxy.privileged\
    \ }}\n          capabilities:\n        {{- if not .Values.istio_cni.enabled }}\n\
    \            add:\n            - NET_ADMIN\n            - NET_RAW\n        {{-\
    \ end }}\n            drop:\n            - ALL\n        {{- if not .Values.istio_cni.enabled\
    \ }}\n          readOnlyRootFilesystem: false\n          runAsGroup: 0\n     \
    \     runAsNonRoot: false\n          runAsUser: 0\n        {{- else }}\n     \
    \     readOnlyRootFilesystem: true\n          runAsGroup: 1337\n          runAsUser:\
    \ 1337\n          runAsNonRoot: true\n        {{- end }}\n        restartPolicy:\
    \ Always\n      {{ end -}}\n      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump`\
    \ .Values.global.proxy.enableCoreDump) \"true\" }}\n      - name: enable-core-dump\n\
    \        args:\n        - -c\n        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy\
    \ && ulimit -c unlimited\n        command:\n          - /bin/sh\n      {{- if\
    \ contains \"/\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image)\
    \ }}\n        image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage`\
    \ .Values.global.proxy_init.image }}\"\n      {{- else }}\n        image: \"{{\
    \ .ProxyImage }}\"\n      {{- end }}\n        {{with .Values.global.imagePullPolicy\
    \ }}imagePullPolicy: \"{{.}}\"{{end}}\n        resources:\n      {{ template \"\
    resources\" . }}\n        securityContext:\n          allowPrivilegeEscalation:\
    \ true\n          capabilities:\n            add:\n            - SYS_ADMIN\n \
    \           drop:\n            - ALL\n          privileged: true\n          readOnlyRootFilesystem:\
    \ false\n          runAsGroup: 0\n          runAsNonRoot: false\n          runAsUser:\
    \ 0\n      {{ end }}\n      containers:\n      - name: istio-proxy\n      {{-\
    \ if contains \"/\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image)\
    \ }}\n        image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage`\
    \ .Values.global.proxy.image }}\"\n      {{- else }}\n        image: \"{{ .ProxyImage\
    \ }}\"\n      {{- end }}\n        ports:\n        - containerPort: 15090\n   \
    \       protocol: TCP\n          name: http-envoy-prom\n        args:\n      \
    \  - proxy\n        - sidecar\n        - --domain\n        - $(POD_NAMESPACE).svc.{{\
    \ .Values.global.proxy.clusterDomain }}\n        - --proxyLogLevel={{ annotation\
    \ .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}\n \
    \       - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel`\
    \ .Values.global.proxy.componentLogLevel }}\n        - --log_output_level={{ annotation\
    \ .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}\n\
    \      {{- if .Values.global.sts.servicePort }}\n        - --stsPort={{ .Values.global.sts.servicePort\
    \ }}\n      {{- end }}\n      {{- if .Values.global.logAsJson }}\n        - --log_as_json\n\
    \      {{- end }}\n      {{- if gt .EstimatedConcurrency 0 }}\n        - --concurrency\n\
    \        - \"{{ .EstimatedConcurrency }}\"\n      {{- end -}}\n      {{- if .Values.global.proxy.lifecycle\
    \ }}\n        lifecycle:\n          {{ toYaml .Values.global.proxy.lifecycle |\
    \ indent 6 }}\n      {{- else if $holdProxy }}\n        lifecycle:\n         \
    \ postStart:\n            exec:\n              command:\n              - pilot-agent\n\
    \              - wait\n      {{- end }}\n        env:\n        {{- if eq (env\
    \ \"PILOT_ENABLE_INBOUND_PASSTHROUGH\" \"true\") \"false\" }}\n        - name:\
    \ REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION\n          value: \"true\"\n    \
    \    {{- end }}\n        - name: JWT_POLICY\n          value: {{ .Values.global.jwtPolicy\
    \ }}\n        - name: PILOT_CERT_PROVIDER\n          value: {{ .Values.global.pilotCertProvider\
    \ }}\n        - name: CA_ADDR\n        {{- if .Values.global.caAddress }}\n  \
    \        value: {{ .Values.global.caAddress }}\n        {{- else }}\n        \
    \  value: istiod{{- if not (eq .Values.revision \"\") }}-{{ .Values.revision }}{{-\
    \ end }}.{{ .Values.global.istioNamespace }}.svc:15012\n        {{- end }}\n \
    \       - name: POD_NAME\n          valueFrom:\n            fieldRef:\n      \
    \        fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n\
    \            fieldRef:\n              fieldPath: metadata.namespace\n        -\
    \ name: INSTANCE_IP\n          valueFrom:\n            fieldRef:\n           \
    \   fieldPath: status.podIP\n        - name: SERVICE_ACCOUNT\n          valueFrom:\n\
    \            fieldRef:\n              fieldPath: spec.serviceAccountName\n   \
    \     - name: HOST_IP\n          valueFrom:\n            fieldRef:\n         \
    \     fieldPath: status.hostIP\n        - name: PROXY_CONFIG\n          value:\
    \ |\n                 {{ protoToJSON .ProxyConfig }}\n        - name: ISTIO_META_POD_PORTS\n\
    \          value: |-\n            [\n            {{- $first := true }}\n     \
    \       {{- range $index1, $c := .Spec.Containers }}\n              {{- range\
    \ $index2, $p := $c.Ports }}\n                {{- if (structToJSON $p) }}\n  \
    \              {{if not $first}},{{end}}{{ structToJSON $p }}\n              \
    \  {{- $first = false }}\n                {{- end }}\n              {{- end}}\n\
    \            {{- end}}\n            ]\n        - name: ISTIO_META_APP_CONTAINERS\n\
    \          value: \"{{ $containers | join \",\" }}\"\n        - name: ISTIO_META_CLUSTER_ID\n\
    \          value: \"{{ valueOrDefault .Values.global.multiCluster.clusterName\
    \ `Kubernetes` }}\"\n        - name: ISTIO_META_INTERCEPTION_MODE\n          value:\
    \ \"{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`)\
    \ .ProxyConfig.InterceptionMode.String }}\"\n        {{- if .Values.global.network\
    \ }}\n        - name: ISTIO_META_NETWORK\n          value: \"{{ .Values.global.network\
    \ }}\"\n        {{- end }}\n        {{- if .DeploymentMeta.Name }}\n        -\
    \ name: ISTIO_META_WORKLOAD_NAME\n          value: \"{{ .DeploymentMeta.Name }}\"\
    \n        {{ end }}\n        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name\
    \ }}\n        - name: ISTIO_META_OWNER\n          value: kubernetes://apis/{{\
    \ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace\
    \ `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\n     \
    \   {{- end}}\n        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`)\
    \ }}\n        - name: ISTIO_BOOTSTRAP_OVERRIDE\n          value: \"/etc/istio/custom-bootstrap/custom_bootstrap.json\"\
    \n        {{- end }}\n        {{- if .Values.global.meshID }}\n        - name:\
    \ ISTIO_META_MESH_ID\n          value: \"{{ .Values.global.meshID }}\"\n     \
    \   {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)\
    \ }}\n        - name: ISTIO_META_MESH_ID\n          value: \"{{ (valueOrDefault\
    \ .MeshConfig.TrustDomain .Values.global.trustDomain) }}\"\n        {{- end }}\n\
    \        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)\
    \  }}\n        - name: TRUST_DOMAIN\n          value: \"{{ . }}\"\n        {{-\
    \ end }}\n        {{- if and (eq .Values.global.proxy.tracer \"datadog\") (isset\
    \ .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\n        {{- range $key,\
    \ $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\n\
    \        - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{- end\
    \ }}\n        {{- end }}\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata\
    \ }}\n        - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{-\
    \ end }}\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \"\
    {{.}}\"{{end}}\n        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port`\
    \ .Values.global.proxy.statusPort) `0` }}\n        readinessProbe:\n         \
    \ httpGet:\n            path: /healthz/ready\n            port: 15021\n      \
    \    initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds`\
    \ .Values.global.proxy.readinessInitialDelaySeconds }}\n          periodSeconds:\
    \ {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds`\
    \ .Values.global.proxy.readinessPeriodSeconds }}\n          timeoutSeconds: 3\n\
    \          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold`\
    \ .Values.global.proxy.readinessFailureThreshold }}\n        {{ end -}}\n    \
    \    securityContext:\n          {{- if eq (index .ProxyConfig.ProxyMetadata \"\
    IPTABLES_TRACE_LOGGING\") \"true\" }}\n          allowPrivilegeEscalation: true\n\
    \          capabilities:\n            add:\n            - NET_ADMIN\n        \
    \    drop:\n            - ALL\n          privileged: true\n          readOnlyRootFilesystem:\
    \ {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump)\
    \ \"true\" }}\n          runAsGroup: 1337\n          fsGroup: 1337\n         \
    \ runAsNonRoot: false\n          runAsUser: 0\n          {{- else }}\n       \
    \   allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}\n        \
    \  capabilities:\n            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode`\
    \ .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService`\
    \ .Values.global.proxy.capNetBindService) `true`) -}}\n            add:\n    \
    \        {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode`\
    \ .ProxyConfig.InterceptionMode) `TPROXY` -}}\n            - NET_ADMIN\n     \
    \       {{- end }}\n            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService`\
    \ .Values.global.proxy.capNetBindService) `true` -}}\n            - NET_BIND_SERVICE\n\
    \            {{- end }}\n            {{- end }}\n            drop:\n         \
    \   - ALL\n          privileged: {{ .Values.global.proxy.privileged }}\n     \
    \     readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump`\
    \ .Values.global.proxy.enableCoreDump) \"true\" }}\n          runAsGroup: 1337\n\
    \          fsGroup: 1337\n          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode`\
    \ .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService`\
    \ .Values.global.proxy.capNetBindService) `true`) -}}\n          runAsNonRoot:\
    \ false\n          runAsUser: 0\n          {{- else -}}\n          runAsNonRoot:\
    \ true\n          runAsUser: 1337\n          {{- end }}\n          {{- end }}\n\
    \        resources:\n      {{ template \"resources\" . }}\n        volumeMounts:\n\
    \        {{- if eq .Values.global.caName \"GkeWorkloadCertificate\" }}\n     \
    \   - name: gke-workload-certificate\n          mountPath: /var/run/secrets/workload-spiffe-credentials\n\
    \          readOnly: true\n        {{- end }}\n        {{- if eq .Values.global.pilotCertProvider\
    \ \"istiod\" }}\n        - mountPath: /var/run/secrets/istio\n          name:\
    \ istiod-ca-cert\n        {{- end }}\n        - mountPath: /var/lib/istio/data\n\
    \          name: istio-data\n        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`)\
    \ }}\n        - mountPath: /etc/istio/custom-bootstrap\n          name: custom-bootstrap-volume\n\
    \        {{- end }}\n        # SDS channel between istioagent and Envoy\n    \
    \    - mountPath: /etc/istio/proxy\n          name: istio-envoy\n        {{- if\
    \ eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n        - mountPath: /var/run/secrets/tokens\n\
    \          name: istio-token\n        {{- end }}\n        {{- if .Values.global.mountMtlsCerts\
    \ }}\n        # Use the key and cert mounted to /etc/certs/ for the in-cluster\
    \ mTLS communications.\n        - mountPath: /etc/certs/\n          name: istio-certs\n\
    \          readOnly: true\n        {{- end }}\n        - name: istio-podinfo\n\
    \          mountPath: /etc/istio/pod\n         {{- if and (eq .Values.global.proxy.tracer\
    \ \"lightstep\") .ProxyConfig.GetTracing.GetTlsSettings }}\n        - mountPath:\
    \ {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}\n \
    \         name: lightstep-certs\n          readOnly: true\n        {{- end }}\n\
    \          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`\
    \ }}\n          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations\
    \ `sidecar.istio.io/userVolumeMount`) }}\n        - name: \"{{  $index }}\"\n\
    \          {{ toYaml $value | indent 6 }}\n          {{ end }}\n          {{-\
    \ end }}\n      volumes:\n      {{- if eq .Values.global.caName \"GkeWorkloadCertificate\"\
    \ }}\n      - name: gke-workload-certificate\n        csi:\n          driver:\
    \ workloadcertificates.security.cloud.google.com\n      {{- end }}\n      {{-\
    \ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\n\
    \      - name: custom-bootstrap-volume\n        configMap:\n          name: {{\
    \ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` \"\" }}\n      {{-\
    \ end }}\n      # SDS channel between istioagent and Envoy\n      - emptyDir:\n\
    \          medium: Memory\n        name: istio-envoy\n      - name: istio-data\n\
    \        emptyDir: {}\n      - name: istio-podinfo\n        downwardAPI:\n   \
    \       items:\n            - path: \"labels\"\n              fieldRef:\n    \
    \            fieldPath: metadata.labels\n            - path: \"annotations\"\n\
    \              fieldRef:\n                fieldPath: metadata.annotations\n  \
    \    {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n      - name:\
    \ istio-token\n        projected:\n          sources:\n          - serviceAccountToken:\n\
    \              path: istio-token\n              expirationSeconds: 43200\n   \
    \           audience: {{ .Values.global.sds.token.aud }}\n      {{- end }}\n \
    \     {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n      - name:\
    \ istiod-ca-cert\n        configMap:\n          name: istio-ca-root-cert\n   \
    \   {{- end }}\n      {{- if .Values.global.mountMtlsCerts }}\n      # Use the\
    \ key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n\
    \      - name: istio-certs\n        secret:\n          optional: true\n      \
    \    {{ if eq .Spec.ServiceAccountName \"\" }}\n          secretName: istio.default\n\
    \          {{ else -}}\n          secretName: {{  printf \"istio.%s\" .Spec.ServiceAccountName\
    \ }}\n          {{  end -}}\n      {{- end }}\n        {{- if isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/userVolume` }}\n        {{range $index, $value := fromJSON\
    \ (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}\n      - name:\
    \ \"{{ $index }}\"\n        {{ toYaml $value | indent 4 }}\n        {{ end }}\n\
    \        {{ end }}\n      {{- if and (eq .Values.global.proxy.tracer \"lightstep\"\
    ) .ProxyConfig.GetTracing.GetTlsSettings }}\n      - name: lightstep-certs\n \
    \       secret:\n          optional: true\n          secretName: lightstep.cacert\n\
    \      {{- end }}\n      {{- if .Values.global.imagePullSecrets }}\n      imagePullSecrets:\n\
    \        {{- range .Values.global.imagePullSecrets }}\n        - name: {{ . }}\n\
    \        {{- end }}\n      {{- end }}\n      {{- if eq (env \"ENABLE_LEGACY_FSGROUP_INJECTION\"\
    \ \"true\") \"true\" }}\n      securityContext:\n        fsGroup: 1337\n     \
    \ {{- end }}\n  gateway: |\n    {{- $containers := list }}\n    {{- range $index,\
    \ $container := .Spec.Containers }}{{ if not (eq $container.Name \"istio-proxy\"\
    ) }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}\n \
    \   metadata:\n      labels:\n        service.istio.io/canonical-name: {{ index\
    \ .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels\
    \ `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default\
    \ .DeploymentMeta.Name  | quote }}\n        service.istio.io/canonical-revision:\
    \ {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default\
    \ (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels\
    \ `version`) | default \"latest\"  | quote }}\n        istio.io/rev: {{ .Revision\
    \ | default \"default\" | quote }}\n      annotations: {\n        {{- if eq (len\
    \ $containers) 1 }}\n        kubectl.kubernetes.io/default-logs-container: \"\
    {{ index $containers 0 }}\",\n        kubectl.kubernetes.io/default-container:\
    \ \"{{ index $containers 0 }}\",\n        {{ end }}\n      }\n    spec:\n    \
    \  containers:\n      - name: istio-proxy\n      {{- if contains \"/\" .Values.global.proxy.image\
    \ }}\n        image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage`\
    \ .Values.global.proxy.image }}\"\n      {{- else }}\n        image: \"{{ .ProxyImage\
    \ }}\"\n      {{- end }}\n        ports:\n        - containerPort: 15090\n   \
    \       protocol: TCP\n          name: http-envoy-prom\n        args:\n      \
    \  - proxy\n        - router\n        - --domain\n        - $(POD_NAMESPACE).svc.{{\
    \ .Values.global.proxy.clusterDomain }}\n        - --proxyLogLevel={{ annotation\
    \ .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}\n \
    \       - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel`\
    \ .Values.global.proxy.componentLogLevel }}\n        - --log_output_level={{ annotation\
    \ .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}\n\
    \      {{- if .Values.global.sts.servicePort }}\n        - --stsPort={{ .Values.global.sts.servicePort\
    \ }}\n      {{- end }}\n      {{- if .Values.global.logAsJson }}\n        - --log_as_json\n\
    \      {{- end }}\n      {{- if .Values.global.proxy.lifecycle }}\n        lifecycle:\n\
    \          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}\n      {{- end\
    \ }}\n        env:\n        - name: JWT_POLICY\n          value: {{ .Values.global.jwtPolicy\
    \ }}\n        - name: PILOT_CERT_PROVIDER\n          value: {{ .Values.global.pilotCertProvider\
    \ }}\n        - name: CA_ADDR\n        {{- if .Values.global.caAddress }}\n  \
    \        value: {{ .Values.global.caAddress }}\n        {{- else }}\n        \
    \  value: istiod{{- if not (eq .Values.revision \"\") }}-{{ .Values.revision }}{{-\
    \ end }}.{{ .Values.global.istioNamespace }}.svc:15012\n        {{- end }}\n \
    \       - name: POD_NAME\n          valueFrom:\n            fieldRef:\n      \
    \        fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n\
    \            fieldRef:\n              fieldPath: metadata.namespace\n        -\
    \ name: INSTANCE_IP\n          valueFrom:\n            fieldRef:\n           \
    \   fieldPath: status.podIP\n        - name: SERVICE_ACCOUNT\n          valueFrom:\n\
    \            fieldRef:\n              fieldPath: spec.serviceAccountName\n   \
    \     - name: HOST_IP\n          valueFrom:\n            fieldRef:\n         \
    \     fieldPath: status.hostIP\n        - name: PROXY_CONFIG\n          value:\
    \ |\n                 {{ protoToJSON .ProxyConfig }}\n        - name: ISTIO_META_POD_PORTS\n\
    \          value: |-\n            [\n            {{- $first := true }}\n     \
    \       {{- range $index1, $c := .Spec.Containers }}\n              {{- range\
    \ $index2, $p := $c.Ports }}\n                {{- if (structToJSON $p) }}\n  \
    \              {{if not $first}},{{end}}{{ structToJSON $p }}\n              \
    \  {{- $first = false }}\n                {{- end }}\n              {{- end}}\n\
    \            {{- end}}\n            ]\n        - name: ISTIO_META_APP_CONTAINERS\n\
    \          value: \"{{ $containers | join \",\" }}\"\n        - name: ISTIO_META_CLUSTER_ID\n\
    \          value: \"{{ valueOrDefault .Values.global.multiCluster.clusterName\
    \ `Kubernetes` }}\"\n        - name: ISTIO_META_INTERCEPTION_MODE\n          value:\
    \ \"{{ .ProxyConfig.InterceptionMode.String }}\"\n        {{- if .Values.global.network\
    \ }}\n        - name: ISTIO_META_NETWORK\n          value: \"{{ .Values.global.network\
    \ }}\"\n        {{- end }}\n        {{- if .DeploymentMeta.Name }}\n        -\
    \ name: ISTIO_META_WORKLOAD_NAME\n          value: \"{{ .DeploymentMeta.Name }}\"\
    \n        {{ end }}\n        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name\
    \ }}\n        - name: ISTIO_META_OWNER\n          value: kubernetes://apis/{{\
    \ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace\
    \ `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\n     \
    \   {{- end}}\n        {{- if .Values.global.meshID }}\n        - name: ISTIO_META_MESH_ID\n\
    \          value: \"{{ .Values.global.meshID }}\"\n        {{- else if (valueOrDefault\
    \ .MeshConfig.TrustDomain .Values.global.trustDomain) }}\n        - name: ISTIO_META_MESH_ID\n\
    \          value: \"{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)\
    \ }}\"\n        {{- end }}\n        {{- with (valueOrDefault .MeshConfig.TrustDomain\
    \ .Values.global.trustDomain)  }}\n        - name: TRUST_DOMAIN\n          value:\
    \ \"{{ . }}\"\n        {{- end }}\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata\
    \ }}\n        - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{-\
    \ end }}\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \"\
    {{.}}\"{{end}}\n        readinessProbe:\n          httpGet:\n            path:\
    \ /healthz/ready\n            port: 15021\n          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds\
    \ }}\n          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds\
    \ }}\n          timeoutSeconds: 3\n          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold\
    \ }}\n        volumeMounts:\n        {{- if eq .Values.global.caName \"GkeWorkloadCertificate\"\
    \ }}\n        - name: gke-workload-certificate\n          mountPath: /var/run/secrets/workload-spiffe-credentials\n\
    \          readOnly: true\n        {{- end }}\n        {{- if eq .Values.global.pilotCertProvider\
    \ \"istiod\" }}\n        - mountPath: /var/run/secrets/istio\n          name:\
    \ istiod-ca-cert\n        {{- end }}\n        - mountPath: /var/lib/istio/data\n\
    \          name: istio-data\n        # SDS channel between istioagent and Envoy\n\
    \        - mountPath: /etc/istio/proxy\n          name: istio-envoy\n        {{-\
    \ if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n        - mountPath:\
    \ /var/run/secrets/tokens\n          name: istio-token\n        {{- end }}\n \
    \       {{- if .Values.global.mountMtlsCerts }}\n        # Use the key and cert\
    \ mounted to /etc/certs/ for the in-cluster mTLS communications.\n        - mountPath:\
    \ /etc/certs/\n          name: istio-certs\n          readOnly: true\n       \
    \ {{- end }}\n        - name: istio-podinfo\n          mountPath: /etc/istio/pod\n\
    \      volumes:\n      {{- if eq .Values.global.caName \"GkeWorkloadCertificate\"\
    \ }}\n      - name: gke-workload-certificate\n        csi:\n          driver:\
    \ workloadcertificates.security.cloud.google.com\n      {{- end }}\n      # SDS\
    \ channel between istioagent and Envoy\n      - emptyDir:\n          medium: Memory\n\
    \        name: istio-envoy\n      - name: istio-data\n        emptyDir: {}\n \
    \     - name: istio-podinfo\n        downwardAPI:\n          items:\n        \
    \    - path: \"labels\"\n              fieldRef:\n                fieldPath: metadata.labels\n\
    \            - path: \"annotations\"\n              fieldRef:\n              \
    \  fieldPath: metadata.annotations\n      {{- if eq .Values.global.jwtPolicy \"\
    third-party-jwt\" }}\n      - name: istio-token\n        projected:\n        \
    \  sources:\n          - serviceAccountToken:\n              path: istio-token\n\
    \              expirationSeconds: 43200\n              audience: {{ .Values.global.sds.token.aud\
    \ }}\n      {{- end }}\n      {{- if eq .Values.global.pilotCertProvider \"istiod\"\
    \ }}\n      - name: istiod-ca-cert\n        configMap:\n          name: istio-ca-root-cert\n\
    \      {{- end }}\n      {{- if .Values.global.mountMtlsCerts }}\n      # Use\
    \ the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n\
    \      - name: istio-certs\n        secret:\n          optional: true\n      \
    \    {{ if eq .Spec.ServiceAccountName \"\" }}\n          secretName: istio.default\n\
    \          {{ else -}}\n          secretName: {{  printf \"istio.%s\" .Spec.ServiceAccountName\
    \ }}\n          {{  end -}}\n      {{- end }}\n      {{- if .Values.global.imagePullSecrets\
    \ }}\n      imagePullSecrets:\n        {{- range .Values.global.imagePullSecrets\
    \ }}\n        - name: {{ . }}\n        {{- end }}\n      {{- end }}\n      {{-\
    \ if eq (env \"ENABLE_LEGACY_FSGROUP_INJECTION\" \"true\") \"true\" }}\n     \
    \ securityContext:\n        fsGroup: 1337\n      {{- end }}\n  grpc-simple: |\n\
    \    metadata:\n      sidecar.istio.io/rewriteAppHTTPProbers: \"false\"\n    spec:\n\
    \      initContainers:\n        - name: grpc-bootstrap-init\n          image:\
    \ busybox:1.28\n          volumeMounts:\n            - mountPath: /var/lib/grpc/data/\n\
    \              name: grpc-io-proxyless-bootstrap\n          env:\n           \
    \ - name: INSTANCE_IP\n              valueFrom:\n                fieldRef:\n \
    \                 fieldPath: status.podIP\n            - name: POD_NAME\n    \
    \          valueFrom:\n                fieldRef:\n                  fieldPath:\
    \ metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n\
    \                fieldRef:\n                  fieldPath: metadata.namespace\n\
    \            - name: ISTIO_NAMESPACE\n              value: |\n               \
    \  {{ .Values.global.istioNamespace }}\n          command:\n            - sh\n\
    \            - \"-c\"\n            - |-\n              NODE_ID=\"sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local\"\
    \n              SERVER_URI=\"dns:///istiod.${ISTIO_NAMESPACE}.svc:15010\"\n  \
    \            echo '\n              {\n                \"xds_servers\": [\n   \
    \               {\n                    \"server_uri\": \"'${SERVER_URI}'\",\n\
    \                    \"channel_creds\": [{\"type\": \"insecure\"}],\n        \
    \            \"server_features\" : [\"xds_v3\"]\n                  }\n       \
    \         ],\n                \"node\": {\n                  \"id\": \"'${NODE_ID}'\"\
    ,\n                  \"metadata\": {\n                    \"GENERATOR\": \"grpc\"\
    \n                  }\n                }\n              }' > /var/lib/grpc/data/bootstrap.json\n\
    \      containers:\n      {{- range $index, $container := .Spec.Containers }}\n\
    \      - name: {{ $container.Name }}\n        env:\n          - name: GRPC_XDS_BOOTSTRAP\n\
    \            value: /var/lib/grpc/data/bootstrap.json\n          - name: GRPC_GO_LOG_VERBOSITY_LEVEL\n\
    \            value: \"99\"\n          - name: GRPC_GO_LOG_SEVERITY_LEVEL\n   \
    \         value: info\n        volumeMounts:\n          - mountPath: /var/lib/grpc/data/\n\
    \            name: grpc-io-proxyless-bootstrap\n      {{- end }}\n      volumes:\n\
    \        - name: grpc-io-proxyless-bootstrap\n          emptyDir: {}\n  grpc-agent:\
    \ |\n    {{- $containers := list }}\n    {{- range $index, $container := .Spec.Containers\
    \ }}{{ if not (eq $container.Name \"istio-proxy\") }}{{ $containers = append $containers\
    \ $container.Name }}{{end}}{{- end}}\n    metadata:\n      labels:\n        service.istio.io/canonical-name:\
    \ {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index\
    \ .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels\
    \ `app`) | default .DeploymentMeta.Name  | quote }}\n        service.istio.io/canonical-revision:\
    \ {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default\
    \ (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels\
    \ `version`) | default \"latest\"  | quote }}\n      annotations: {\n        {{-\
    \ if eq (len $containers) 1 }}\n        kubectl.kubernetes.io/default-logs-container:\
    \ \"{{ index $containers 0 }}\",\n        kubectl.kubernetes.io/default-container:\
    \ \"{{ index $containers 0 }}\",\n        {{ end }}\n        sidecar.istio.io/rewriteAppHTTPProbers:\
    \ \"false\",\n      }\n    spec:\n      containers:\n      {{- range $index, $container\
    \ := .Spec.Containers  }}\n      {{ if not (eq $container.Name \"istio-proxy\"\
    ) }}\n      - name: {{ $container.Name }}\n        env:\n        - name: \"GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT\"\
    \n          value: \"true\"\n        - name: \"GRPC_XDS_BOOTSTRAP\"\n        \
    \  value: \"/etc/istio/proxy/grpc-bootstrap.json\"\n        volumeMounts:\n  \
    \      - mountPath: /var/lib/istio/data\n          name: istio-data\n        #\
    \ UDS channel between istioagent and gRPC client for XDS/SDS\n        - mountPath:\
    \ /etc/istio/proxy\n          name: istio-xds\n      {{- end }}\n      {{- end\
    \ }}\n      - name: istio-proxy\n      {{- if contains \"/\" (annotation .ObjectMeta\
    \ `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}\n        image:\
    \ \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image\
    \ }}\"\n      {{- else }}\n        image: \"{{ .ProxyImage }}\"\n      {{- end\
    \ }}\n        args:\n        - proxy\n        - sidecar\n        - --domain\n\
    \        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\n   \
    \     - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel`\
    \ .Values.global.logging.level }}\n      {{- if .Values.global.sts.servicePort\
    \ }}\n        - --stsPort={{ .Values.global.sts.servicePort }}\n      {{- end\
    \ }}\n      {{- if .Values.global.logAsJson }}\n        - --log_as_json\n    \
    \  {{- end }}\n        env:\n        - name: ISTIO_META_GENERATOR\n          value:\
    \ grpc\n        - name: OUTPUT_CERTS\n          value: /var/lib/istio/data\n \
    \       {{- if eq (env \"PILOT_ENABLE_INBOUND_PASSTHROUGH\" \"true\") \"false\"\
    \ }}\n        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION\n          value:\
    \ \"true\"\n        {{- end }}\n        - name: JWT_POLICY\n          value: {{\
    \ .Values.global.jwtPolicy }}\n        - name: PILOT_CERT_PROVIDER\n         \
    \ value: {{ .Values.global.pilotCertProvider }}\n        - name: CA_ADDR\n   \
    \     {{- if .Values.global.caAddress }}\n          value: {{ .Values.global.caAddress\
    \ }}\n        {{- else }}\n          value: istiod{{- if not (eq .Values.revision\
    \ \"\") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012\n\
    \        {{- end }}\n        - name: POD_NAME\n          valueFrom:\n        \
    \    fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n\
    \          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n\
    \        - name: INSTANCE_IP\n          valueFrom:\n            fieldRef:\n  \
    \            fieldPath: status.podIP\n        - name: SERVICE_ACCOUNT\n      \
    \    valueFrom:\n            fieldRef:\n              fieldPath: spec.serviceAccountName\n\
    \        - name: HOST_IP\n          valueFrom:\n            fieldRef:\n      \
    \        fieldPath: status.hostIP\n        - name: PROXY_CONFIG\n          value:\
    \ |\n                 {{ protoToJSON .ProxyConfig }}\n        - name: ISTIO_META_POD_PORTS\n\
    \          value: |-\n            [\n            {{- $first := true }}\n     \
    \       {{- range $index1, $c := .Spec.Containers }}\n              {{- range\
    \ $index2, $p := $c.Ports }}\n                {{- if (structToJSON $p) }}\n  \
    \              {{if not $first}},{{end}}{{ structToJSON $p }}\n              \
    \  {{- $first = false }}\n                {{- end }}\n              {{- end}}\n\
    \            {{- end}}\n            ]\n        - name: ISTIO_META_APP_CONTAINERS\n\
    \          value: \"{{ $containers | join \",\" }}\"\n        - name: ISTIO_META_CLUSTER_ID\n\
    \          value: \"{{ valueOrDefault .Values.global.multiCluster.clusterName\
    \ `Kubernetes` }}\"\n        - name: ISTIO_META_INTERCEPTION_MODE\n          value:\
    \ \"{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`)\
    \ .ProxyConfig.InterceptionMode.String }}\"\n        {{- if .Values.global.network\
    \ }}\n        - name: ISTIO_META_NETWORK\n          value: \"{{ .Values.global.network\
    \ }}\"\n        {{- end }}\n        {{- if .DeploymentMeta.Name }}\n        -\
    \ name: ISTIO_META_WORKLOAD_NAME\n          value: \"{{ .DeploymentMeta.Name }}\"\
    \n        {{ end }}\n        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name\
    \ }}\n        - name: ISTIO_META_OWNER\n          value: kubernetes://apis/{{\
    \ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace\
    \ `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\n     \
    \   {{- end}}\n        {{- if .Values.global.meshID }}\n        - name: ISTIO_META_MESH_ID\n\
    \          value: \"{{ .Values.global.meshID }}\"\n        {{- else if (valueOrDefault\
    \ .MeshConfig.TrustDomain .Values.global.trustDomain) }}\n        - name: ISTIO_META_MESH_ID\n\
    \          value: \"{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)\
    \ }}\"\n        {{- end }}\n        {{- with (valueOrDefault .MeshConfig.TrustDomain\
    \ .Values.global.trustDomain)  }}\n        - name: TRUST_DOMAIN\n          value:\
    \ \"{{ . }}\"\n        {{- end }}\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata\
    \ }}\n        - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{-\
    \ end }}\n        # grpc uses xds:/// to resolve – no need to resolve VIP\n  \
    \      - name: ISTIO_META_DNS_CAPTURE\n          value: \"false\"\n        - name:\
    \ DISABLE_ENVOY\n          value: \"true\"\n        {{with .Values.global.imagePullPolicy\
    \ }}imagePullPolicy: \"{{.}}\"{{end}}\n        {{ if ne (annotation .ObjectMeta\
    \ `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}\n   \
    \     readinessProbe:\n          httpGet:\n            path: /healthz/ready\n\
    \            port: {{ .Values.global.proxy.statusPort }}\n          initialDelaySeconds:\
    \ {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds`\
    \ .Values.global.proxy.readinessInitialDelaySeconds }}\n          periodSeconds:\
    \ {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds`\
    \ .Values.global.proxy.readinessPeriodSeconds }}\n          timeoutSeconds: 3\n\
    \          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold`\
    \ .Values.global.proxy.readinessFailureThreshold }}\n        {{ end -}}\n    \
    \    resources:\n      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`)\
    \ (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`)\
    \ }}\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`)\
    \ (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}\n        \
    \  requests:\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`)\
    \ -}}\n            cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`\
    \ }}\"\n            {{ end }}\n            {{ if (isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemory`) -}}\n            memory: \"{{ index .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemory` }}\"\n            {{ end }}\n        {{- end\
    \ }}\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`)\
    \ (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\n   \
    \       limits:\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`)\
    \ -}}\n            cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`\
    \ }}\"\n            {{ end }}\n            {{ if (isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemoryLimit`) -}}\n            memory: \"{{ index .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemoryLimit` }}\"\n            {{ end }}\n        {{-\
    \ end }}\n      {{- else }}\n        {{- if .Values.global.proxy.resources }}\n\
    \          {{ toYaml .Values.global.proxy.resources | indent 6 }}\n        {{-\
    \ end }}\n      {{- end }}\n        volumeMounts:\n        {{- if eq .Values.global.pilotCertProvider\
    \ \"istiod\" }}\n        - mountPath: /var/run/secrets/istio\n          name:\
    \ istiod-ca-cert\n        {{- end }}\n        - mountPath: /var/lib/istio/data\n\
    \          name: istio-data\n        # UDS channel between istioagent and gRPC\
    \ client for XDS/SDS\n        - mountPath: /etc/istio/proxy\n          name: istio-xds\n\
    \        {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n        -\
    \ mountPath: /var/run/secrets/tokens\n          name: istio-token\n        {{-\
    \ end }}\n        - name: istio-podinfo\n          mountPath: /etc/istio/pod\n\
    \        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`\
    \ }}\n        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations\
    \ `sidecar.istio.io/userVolumeMount`) }}\n        - name: \"{{  $index }}\"\n\
    \        {{ toYaml $value | indent 6 }}\n        {{ end }}\n        {{- end }}\n\
    \      volumes:\n      # UDS channel between istioagent and gRPC client for XDS/SDS\n\
    \      - emptyDir:\n          medium: Memory\n        name: istio-xds\n      -\
    \ name: istio-data\n        emptyDir: {}\n      - name: istio-podinfo\n      \
    \  downwardAPI:\n          items:\n            - path: \"labels\"\n          \
    \    fieldRef:\n                fieldPath: metadata.labels\n            - path:\
    \ \"annotations\"\n              fieldRef:\n                fieldPath: metadata.annotations\n\
    \    {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n      - name:\
    \ istio-token\n        projected:\n          sources:\n          - serviceAccountToken:\n\
    \              path: istio-token\n              expirationSeconds: 43200\n   \
    \           audience: {{ .Values.global.sds.token.aud }}\n    {{- end }}\n   \
    \   {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n      - name: istiod-ca-cert\n\
    \        configMap:\n          name: istio-ca-root-cert\n      {{- end }}\n  \
    \    {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}\n \
    \     {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`)\
    \ }}\n      - name: \"{{ $index }}\"\n      {{ toYaml $value | indent 4 }}\n \
    \     {{ end }}\n      {{ end }}"
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: istio-sidecar-injector
  labels:
    istio.io/rev: default
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: Pilot
    app: sidecar-injector
    release: istio
webhooks:
  - name: rev.namespace.sidecar-injector.istio.io
    clientConfig:
      service:
        name: istiod
        namespace: istio-system
        path: /inject
        port: 443
      caBundle: ''
    sideEffects: None
    rules:
      - operations:
          - CREATE
        apiGroups:
          - ''
        apiVersions:
          - v1
        resources:
          - pods
    failurePolicy: Fail
    admissionReviewVersions:
      - v1beta1
      - v1
    namespaceSelector:
      matchExpressions:
        - key: istio.io/rev
          operator: In
          values:
            - default
        - key: istio-injection
          operator: DoesNotExist
    objectSelector:
      matchExpressions:
        - key: sidecar.istio.io/inject
          operator: NotIn
          values:
            - 'false'
  - name: rev.object.sidecar-injector.istio.io
    clientConfig:
      service:
        name: istiod
        namespace: istio-system
        path: /inject
        port: 443
      caBundle: ''
    sideEffects: None
    rules:
      - operations:
          - CREATE
        apiGroups:
          - ''
        apiVersions:
          - v1
        resources:
          - pods
    failurePolicy: Fail
    admissionReviewVersions:
      - v1beta1
      - v1
    namespaceSelector:
      matchExpressions:
        - key: istio.io/rev
          operator: DoesNotExist
        - key: istio-injection
          operator: DoesNotExist
    objectSelector:
      matchExpressions:
        - key: sidecar.istio.io/inject
          operator: NotIn
          values:
            - 'false'
        - key: istio.io/rev
          operator: In
          values:
            - default
  - name: namespace.sidecar-injector.istio.io
    clientConfig:
      service:
        name: istiod
        namespace: istio-system
        path: /inject
        port: 443
      caBundle: ''
    sideEffects: None
    rules:
      - operations:
          - CREATE
        apiGroups:
          - ''
        apiVersions:
          - v1
        resources:
          - pods
    failurePolicy: Fail
    admissionReviewVersions:
      - v1beta1
      - v1
    namespaceSelector:
      matchExpressions:
        - key: istio-injection
          operator: In
          values:
            - enabled
    objectSelector:
      matchExpressions:
        - key: sidecar.istio.io/inject
          operator: NotIn
          values:
            - 'false'
  - name: object.sidecar-injector.istio.io
    clientConfig:
      service:
        name: istiod
        namespace: istio-system
        path: /inject
        port: 443
      caBundle: ''
    sideEffects: None
    rules:
      - operations:
          - CREATE
        apiGroups:
          - ''
        apiVersions:
          - v1
        resources:
          - pods
    failurePolicy: Fail
    admissionReviewVersions:
      - v1beta1
      - v1
    namespaceSelector:
      matchExpressions:
        - key: istio-injection
          operator: DoesNotExist
        - key: istio.io/rev
          operator: DoesNotExist
    objectSelector:
      matchExpressions:
        - key: sidecar.istio.io/inject
          operator: In
          values:
            - 'true'
        - key: istio.io/rev
          operator: DoesNotExist
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-ingressgateway
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    istio: ingressgateway
    release: istio
    istio.io/rev: default
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: IngressGateways
spec:
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: ingressgateway
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: istio-ingressgateway
        istio: ingressgateway
        heritage: Tiller
        release: istio
        chart: gateways
        service.istio.io/canonical-name: istio-ingressgateway
        service.istio.io/canonical-revision: latest
        istio.io/rev: default
        install.operator.istio.io/owning-resource: unknown
        operator.istio.io/component: IngressGateways
        sidecar.istio.io/inject: 'false'
      annotations:
        prometheus.io/port: '15020'
        prometheus.io/scrape: 'true'
        prometheus.io/path: /stats/prometheus
        sidecar.istio.io/inject: 'false'
    spec:
      securityContext:
        runAsUser: 1337
        runAsGroup: 1337
        runAsNonRoot: true
        fsGroup: 1337
      serviceAccountName: istio-ingressgateway-service-account
      containers:
        - name: istio-proxy
          image: docker.io/istio/proxyv2:1.13.2
          ports:
            - containerPort: 15021
              protocol: TCP
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
            - containerPort: 15090
              protocol: TCP
              name: http-envoy-prom
          args:
            - proxy
            - router
            - --domain
            - $(POD_NAMESPACE).svc.cluster.local
            - --proxyLogLevel=warning
            - --proxyComponentLogLevel=misc:error
            - --log_output_level=default:info
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - name: JWT_POLICY
              value: third-party-jwt
            - name: PILOT_CERT_PROVIDER
              value: istiod
            - name: CA_ADDR
              value: istiod.istio-system.svc:15012
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: ISTIO_META_WORKLOAD_NAME
              value: istio-ingressgateway
            - name: ISTIO_META_OWNER
              value: kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-ingressgateway
            - name: ISTIO_META_MESH_ID
              value: cluster.local
            - name: TRUST_DOMAIN
              value: cluster.local
            - name: ISTIO_META_UNPRIVILEGED_POD
              value: 'true'
            - name: ISTIO_META_CLUSTER_ID
              value: Kubernetes
          volumeMounts:
            - name: istio-envoy
              mountPath: /etc/istio/proxy
            - name: config-volume
              mountPath: /etc/istio/config
            - mountPath: /var/run/secrets/istio
              name: istiod-ca-cert
            - name: istio-token
              mountPath: /var/run/secrets/tokens
              readOnly: true
            - mountPath: /var/lib/istio/data
              name: istio-data
            - name: podinfo
              mountPath: /etc/istio/pod
            - name: ingressgateway-certs
              mountPath: /etc/istio/ingressgateway-certs
              readOnly: true
            - name: ingressgateway-ca-certs
              mountPath: /etc/istio/ingressgateway-ca-certs
              readOnly: true
      volumes:
        - name: istiod-ca-cert
          configMap:
            name: istio-ca-root-cert
        - name: podinfo
          downwardAPI:
            items:
              - path: labels
                fieldRef:
                  fieldPath: metadata.labels
              - path: annotations
                fieldRef:
                  fieldPath: metadata.annotations
        - name: istio-envoy
          emptyDir: {}
        - name: istio-data
          emptyDir: {}
        - name: istio-token
          projected:
            sources:
              - serviceAccountToken:
                  path: istio-token
                  expirationSeconds: 43200
                  audience: istio-ca
        - name: config-volume
          configMap:
            name: istio
            optional: true
        - name: ingressgateway-certs
          secret:
            secretName: istio-ingressgateway-certs
            optional: true
        - name: ingressgateway-ca-certs
          secret:
            secretName: istio-ingressgateway-ca-certs
            optional: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
                      - ppc64le
                      - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 2
              preference:
                matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
            - weight: 2
              preference:
                matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - arm64
            - weight: 2
              preference:
                matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - ppc64le
            - weight: 2
              preference:
                matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - s390x
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: istiod
  namespace: istio-system
  labels:
    app: istiod
    istio.io/rev: default
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: Pilot
    istio: pilot
    release: istio
spec:
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  selector:
    matchLabels:
      istio: pilot
  template:
    metadata:
      labels:
        app: istiod
        istio.io/rev: default
        install.operator.istio.io/owning-resource: unknown
        sidecar.istio.io/inject: 'false'
        operator.istio.io/component: Pilot
        istio: pilot
      annotations:
        prometheus.io/port: '15014'
        prometheus.io/scrape: 'true'
        sidecar.istio.io/inject: 'false'
    spec:
      serviceAccountName: istiod
      securityContext:
        fsGroup: 1337
      containers:
        - name: discovery
          image: docker.io/istio/pilot:1.13.2
          args:
            - discovery
            - --monitoringAddr=:15014
            - --log_output_level=default:info
            - --domain
            - cluster.local
            - --keepaliveMaxServerConnectionAge
            - 30m
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 15010
              protocol: TCP
            - containerPort: 15017
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 1
            periodSeconds: 3
            timeoutSeconds: 5
          env:
            - name: REVISION
              value: default
            - name: JWT_POLICY
              value: third-party-jwt
            - name: PILOT_CERT_PROVIDER
              value: istiod
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.serviceAccountName
            - name: KUBECONFIG
              value: /var/run/secrets/remote/config
            - name: PILOT_TRACE_SAMPLING
              value: '1'
            - name: PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND
              value: 'true'
            - name: PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND
              value: 'true'
            - name: ISTIOD_ADDR
              value: istiod.istio-system.svc:15012
            - name: PILOT_ENABLE_ANALYSIS
              value: 'false'
            - name: CLUSTER_ID
              value: Kubernetes
          resources:
            requests:
              cpu: 500m
              memory: 2048Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1337
            runAsGroup: 1337
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: istio-token
              mountPath: /var/run/secrets/tokens
              readOnly: true
            - name: local-certs
              mountPath: /var/run/secrets/istio-dns
            - name: cacerts
              mountPath: /etc/cacerts
              readOnly: true
            - name: istio-kubeconfig
              mountPath: /var/run/secrets/remote
              readOnly: true
      volumes:
        - emptyDir:
            medium: Memory
          name: local-certs
        - name: istio-token
          projected:
            sources:
              - serviceAccountToken:
                  audience: istio-ca
                  expirationSeconds: 43200
                  path: istio-token
        - name: cacerts
          secret:
            secretName: cacerts
            optional: true
        - name: istio-kubeconfig
          secret:
            secretName: istio-kubeconfig
            optional: true
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: istio-ingressgateway
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    istio: ingressgateway
    release: istio
    istio.io/rev: default
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: IngressGateways
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: ingressgateway
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: istiod
  namespace: istio-system
  labels:
    app: istiod
    istio.io/rev: default
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: Pilot
    release: istio
    istio: pilot
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: istiod
      istio: pilot
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: istio-ingressgateway-sds
  namespace: istio-system
  labels:
    release: istio
    istio.io/rev: default
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: IngressGateways
rules:
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: istiod
  namespace: istio-system
  labels:
    app: istiod
    release: istio
rules:
  - apiGroups:
      - networking.istio.io
    verbs:
      - create
    resources:
      - gateways
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - create
      - get
      - watch
      - list
      - update
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: istiod-istio-system
  namespace: istio-system
  labels:
    app: istiod
    release: istio
rules:
  - apiGroups:
      - networking.istio.io
    verbs:
      - create
    resources:
      - gateways
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - create
      - get
      - watch
      - list
      - update
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: istio-ingressgateway-sds
  namespace: istio-system
  labels:
    release: istio
    istio.io/rev: default
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: IngressGateways
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istio-ingressgateway-sds
subjects:
  - kind: ServiceAccount
    name: istio-ingressgateway-service-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: istiod
  namespace: istio-system
  labels:
    app: istiod
    release: istio
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istiod
subjects:
  - kind: ServiceAccount
    name: istiod
    namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: istiod-istio-system
  namespace: istio-system
  labels:
    app: istiod
    release: istio
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istiod-istio-system
subjects:
  - kind: ServiceAccount
    name: istiod-service-account
    namespace: istio-system
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: istio-ingressgateway
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    istio: ingressgateway
    release: istio
    istio.io/rev: default
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: IngressGateways
spec:
  maxReplicas: 5
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: istio-ingressgateway
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: istiod
  namespace: istio-system
  labels:
    app: istiod
    release: istio
    istio.io/rev: default
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: Pilot
spec:
  maxReplicas: 5
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: istiod
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
---
apiVersion: v1
kind: Service
metadata:
  name: istio-ingressgateway
  namespace: istio-system
  annotations: null
  labels:
    app: istio-ingressgateway
    istio: ingressgateway
    release: istio
    istio.io/rev: default
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: IngressGateways
spec:
  type: LoadBalancer
  selector:
    app: istio-ingressgateway
    istio: ingressgateway
  ports:
    - name: status-port
      port: 15021
      protocol: TCP
      targetPort: 15021
    - name: http2
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
---
apiVersion: v1
kind: Service
metadata:
  name: istiod
  namespace: istio-system
  labels:
    istio.io/rev: default
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: Pilot
    app: istiod
    istio: pilot
    release: istio
spec:
  ports:
    - port: 15010
      name: grpc-xds
      protocol: TCP
    - port: 15012
      name: https-dns
      protocol: TCP
    - port: 443
      name: https-webhook
      targetPort: 15017
      protocol: TCP
    - port: 15014
      name: http-monitoring
      protocol: TCP
  selector:
    app: istiod
    istio: pilot
