steps:

  - name: node:alpine
    id: install
    dir: frontend
    entrypoint: npm
    args: ['ci', '--no-optional']

  - name: node:alpine
    id: lint
    dir: frontend
    entrypoint: npm
    args: ['run', 'lint']

  - name: node:alpine
    id: test
    dir: frontend
    entrypoint: npm
    args: ['test']

  - name: node:alpine
    id: lingui-extract
    dir: frontend
    entrypoint: npm
    args: ['run', 'extract']

  - name: node:alpine
    id: lingui-compile
    dir: frontend
    entrypoint: npm
    args: ['run', 'compile']

  - name: node:alpine
    id: build-production-bundle
    dir: frontend
    entrypoint: npm
    args: ['run', 'build']

  - name: 'gcr.io/cloud-builders/docker'
    id: build-if-master
    entrypoint: 'bash'
    dir: frontend
    args:
    - '-c'
    - |
      if [[ "$BRANCH_NAME" == "master" ]]
      then
        docker build -t gcr.io/$PROJECT_ID/frontend:$BRANCH_NAME-$SHORT_SHA-$(date +%s) .
      else
        exit 0
      fi

  - name: 'gcr.io/cloud-builders/docker'
    id: push-if-master
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      if [[ "$BRANCH_NAME" == "master" ]]
      then
        docker push gcr.io/$PROJECT_ID/frontend:$BRANCH_NAME-$SHORT_SHA-$(date +%s)
      else
        exit 0
      fi
