steps:
  - name: node:16.3.0-alpine
    id: install
    dir: frontend
    entrypoint: npm
    args: ['ci', '--no-optional']

  - name: node:16.3.0-alpine
    id: lint
    dir: frontend
    entrypoint: npm
    args: ['run', 'lint']

  - name: node:16.3.0-alpine
    id: lingui-extract
    dir: api
    entrypoint: ash
    args:
      - '-c'
      - |
        npm run extract | tee /workspace/lingui-extract-output.txt

  - name: node:alpine
    id: lingui-translation-check
    dir: api
    entrypoint: ash
    args:
      - '-c'
      - |
        output=$( awk -F 'â”‚' '/fr/ { gsub(/^[ \t]+|[ \t]+$/, "", $4); print $4 }' lingui-extract-output.txt )

        # Check if there are any missed french translations
        if [ "$output" -eq 0 ]; then
          echo "All translations are up to date, proceeding."
        else
          echo "There are $output missed translations, please update them before proceeding."
          exit 1
        fi

  - name: 'gcr.io/cloud-builders/docker'
    id: check
    entrypoint: 'bash'
    dir: api-js
    args:
      - '-c'
      - |
        echo "northamerica-northeast1-docker.pkg.dev/track-compliance/tracker/frontend:$(echo $BRANCH_NAME | sed 's/[^a-zA-Z0-9]/-/g')-$SHORT_SHA-$(date +%s)" > /workspace/imagename


  - name: node:16.3.0-alpine
    id: lingui-compile
    dir: frontend
    entrypoint: npm
    args: ['run', 'compile']

  - name: node:16.3.0-alpine
    id: test
    dir: frontend
    entrypoint: npm
    args: ['test']

  - name: node:16.3.0-alpine
    id: build-production-bundle
    dir: frontend
    entrypoint: npm
    args: ['run', 'build']

  - name: 'gcr.io/cloud-builders/docker'
    id: generate-image-name
    entrypoint: 'bash'
    dir: api-js
    args:
      - '-c'
      - |
        echo "northamerica-northeast1-docker.pkg.dev/track-compliance/tracker/frontend:$(echo $BRANCH_NAME | sed 's/[^a-zA-Z0-9]/-/g')-$SHORT_SHA-$(date +%s)" > /workspace/imagename

  - name: 'gcr.io/cloud-builders/docker'
    id: build
    entrypoint: 'bash'
    dir: frontend
    args:
      - '-c'
      - |
        image=$(cat /workspace/imagename)
        docker build -t $image .

  - name: 'gcr.io/cloud-builders/docker'
    id: push-if-master
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "master" ]]
        then
          image=$(cat /workspace/imagename)
          docker push $image
        else
          exit 0
        fi

timeout: 1200s
options:
  machineType: 'E2_HIGHCPU_8'
