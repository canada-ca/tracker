steps:

  - name: 'gcr.io/cloud-builders/docker'
    id: start_arango
    entrypoint: /bin/sh
    args:
      [
        '-c',
        'docker run -d --network=cloudbuild -p=8529:8529 -e ARANGO_ROOT_PASSWORD=$_DB_PASS --name=arangodb arangodb/arangodb:3.10.4',
      ]

  - name: mikewilliamson/wait-for
    id: wait_arango
    args: ['arangodb:8529']

  - name: node:16-alpine
    id: install
    dir: scanners/domain-dispatcher
    entrypoint: npm
    args: ['ci', '--no-optional']

  - name: node:16-alpine
    id: lint
    dir: scanners/domain-dispatcher
    entrypoint: npm
    args: ['run', 'lint']

  - name: node:16-alpine
    id: test
    dir: scanners/domain-dispatcher
    entrypoint: npm
    args: ['test']
    env:
    - DB_PASS=$_DB_PASS
    - DB_NAME=$_DB_NAME
    - DB_USER=$_DB_USER
    - DB_HOST=$_DB_HOST
    - DB_COLLECTION=domains
    - DB_PORT=8529
    - PUBLISH_TO=domains
    - NATS_URL=nats://demo.nats.io:4222

  - name: 'gcr.io/cloud-builders/docker'
    id: generate-image-name
    dir: scanners/domain-dispatcher
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "gcr.io/$PROJECT_ID/domain-dispatcher:$BRANCH_NAME-$SHORT_SHA-$(date +%s)" > /workspace/imagename

  - name: 'gcr.io/cloud-builders/docker'
    id: build-if-master
    dir: scanners/domain-dispatcher
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "master" ]]
        then
          image=$(cat /workspace/imagename)
          docker build -t $image .
        else
          exit 0
        fi

  - name: 'gcr.io/cloud-builders/docker'
    id: push-if-master
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "master" ]]
        then
          image=$(cat /workspace/imagename)
          docker push $image
        else
          exit 0
        fi
