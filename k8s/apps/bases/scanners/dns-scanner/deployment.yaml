apiVersion: apps/v1
kind: Deployment
metadata:
  name: dns-scanner
  labels:
    app: dns-scanner
  namespace: scanners
spec:
  selector:
    matchLabels:
      app: dns-scanner
  strategy: {}
  template:
    metadata:
      labels:
        app: dns-scanner
    spec:
      securityContext:
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: dns-scanner
          image: northamerica-northeast1-docker.pkg.dev/track-compliance/tracker/dns-scanner:master-629b995-1721995989 # {"$imagepolicy": "flux-system:dns-scanner"}
          env:
            - name: LOGGER_LEVEL
              value: INFO
            - name: SCAN_THREAD_COUNT
              value: "2"
            - name: DB_NAME
              value: track_dmarc
            - name: DB_URL
              value: http://arangodb.db:8529
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: scanners
                  key: DB_PASS
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: scanners
                  key: DB_USER
            - name: PYTHONWARNINGS
              value: ignore
            - name: NATS_SERVERS
              value: nats://nats.pubsub:4222
            - name: SCAN_TIMEOUT
              value: "80"
            - name: NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: AZURE_CONN_STRING
              valueFrom:
                secretKeyRef:
                  name: dmarc
                  key: AZURE_CONN_STRING
            - name: DATABASE
              valueFrom:
                secretKeyRef:
                  name: dmarc
                  key: DATABASE
            - name: SUMMARIES_CONTAINER
              valueFrom:
                secretKeyRef:
                  name: dmarc
                  key: SUMMARIES_CONTAINER
          resources: {}
          imagePullPolicy: Always
          securityContext:
            runAsGroup: 1000
            runAsUser: 1000
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
status: {}
